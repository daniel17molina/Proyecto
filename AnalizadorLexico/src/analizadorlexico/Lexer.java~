/* The following code was generated by JFlex 1.4.3 on 22/10/21 06:50 PM */

package analizadorlexico;
import static analizadorlexico.Tokens.*;

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.4.3
 * on 22/10/21 06:50 PM from the specification file
 * <tt>C:/Users/jenif/OneDrive/Documentos/GitHub/Proyecto/AnalizadorLexico/src/analizadorlexico/Lexer.flex</tt>
 */
class Lexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\11\1\51\2\0\1\11\22\0\1\10\1\66\1\7\2\0"+
    "\1\61\1\64\1\0\1\36\1\37\1\6\1\60\1\12\1\4\1\13"+
    "\1\5\2\62\10\3\1\0\1\42\1\41\1\50\1\41\2\0\1\2"+
    "\1\31\1\2\1\33\1\2\1\25\2\2\1\17\3\2\1\44\4\2"+
    "\1\46\1\34\2\2\1\2\4\2\1\67\1\0\1\70\1\63\1\1"+
    "\1\0\1\26\1\40\1\47\1\45\1\20\1\14\1\16\1\43\1\35"+
    "\2\1\1\15\1\55\1\23\1\24\1\21\1\56\1\30\1\22\1\27"+
    "\1\32\1\1\1\54\1\1\1\57\1\1\1\52\1\65\1\53\uff82\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7"+
    "\1\1\3\7\3\2\1\3\4\2\1\3\3\2\1\3"+
    "\1\2\2\3\1\2\1\10\1\11\1\2\1\12\1\13"+
    "\1\2\1\3\2\2\1\14\1\15\1\16\1\17\2\2"+
    "\1\1\1\20\1\21\3\22\1\23\1\24\3\0\1\25"+
    "\2\0\1\26\1\27\1\26\1\30\1\31\3\0\1\32"+
    "\1\0\1\33\1\26\1\7\1\2\1\0\5\2\2\0"+
    "\6\2\2\0\5\2\1\0\1\2\1\0\1\2\1\0"+
    "\1\2\2\0\1\2\1\0\3\2\2\0\2\3\1\0"+
    "\1\2\1\0\2\2\1\12\1\0\1\34\3\2\1\35"+
    "\1\22\1\0\1\36\1\25\2\0\1\37\1\26\1\30"+
    "\1\0\1\33\1\7\5\0\1\2\1\0\1\2\14\0"+
    "\1\2\1\40\1\2\11\0\1\2\2\0\1\41\2\0"+
    "\1\2\36\0\1\42\1\2\1\3\1\43\1\0\2\2"+
    "\6\0\1\2\1\44\2\2\10\0\1\2\12\0\1\45"+
    "\1\43\5\0\1\2\1\0\1\46\54\0\1\47\1\3"+
    "\1\4\1\2\1\0\2\2\7\0\1\47\12\0\1\2"+
    "\46\0\1\3\1\2\1\50\6\0\1\51\7\0\1\2"+
    "\27\0\1\43\1\2\15\0\1\2\30\0\1\52\1\53"+
    "\1\54\1\55\2\0\1\56\1\57\1\0\1\60\1\0"+
    "\1\61\1\0\1\62\1\0\1\63\1\0\1\64\1\0"+
    "\1\65\31\0\1\66\60\0\1\67\22\0\1\70";

  private static int [] zzUnpackAction() {
    int [] result = new int[552];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\71\0\162\0\253\0\344\0\u011d\0\u0156\0\u018f"+
    "\0\u01c8\0\u0201\0\u023a\0\u0273\0\u02ac\0\u02e5\0\u031e\0\u0357"+
    "\0\u0390\0\u03c9\0\u0402\0\u043b\0\u0474\0\u04ad\0\u04e6\0\u051f"+
    "\0\u0558\0\u0591\0\u05ca\0\u0603\0\u063c\0\u0675\0\71\0\u06ae"+
    "\0\u06e7\0\71\0\u0720\0\u0759\0\u0792\0\u07cb\0\u06e7\0\71"+
    "\0\71\0\71\0\u0804\0\u083d\0\u0876\0\u08af\0\71\0\u08e8"+
    "\0\u0921\0\u06e7\0\71\0\71\0\u095a\0\u0993\0\u09cc\0\u0a05"+
    "\0\u0a3e\0\u0a77\0\u0ab0\0\u0ae9\0\u0b22\0\u0b5b\0\71\0\u0b94"+
    "\0\u0bcd\0\u0c06\0\u0c3f\0\u0c78\0\u01c8\0\u0cb1\0\u0cea\0\u0d23"+
    "\0\u0d5c\0\u0d95\0\u0dce\0\u0e07\0\u0e40\0\u0e79\0\u0eb2\0\u0eeb"+
    "\0\u0f24\0\u0f5d\0\u0f96\0\u0fcf\0\u1008\0\u1041\0\u107a\0\u10b3"+
    "\0\u10ec\0\u1125\0\u115e\0\u1197\0\u11d0\0\u1209\0\u1242\0\u127b"+
    "\0\u12b4\0\u12ed\0\u1326\0\u135f\0\u1398\0\u13d1\0\u140a\0\u1443"+
    "\0\u147c\0\u14b5\0\u14ee\0\u1527\0\u1560\0\u1599\0\u15d2\0\u160b"+
    "\0\u1644\0\u167d\0\u16b6\0\71\0\u16ef\0\u1728\0\u1761\0\u179a"+
    "\0\u17d3\0\u0993\0\71\0\u180c\0\u1845\0\u187e\0\u18b7\0\u18f0"+
    "\0\u1929\0\u0ae9\0\u1962\0\u199b\0\u19d4\0\u1a0d\0\u1a46\0\u1a7f"+
    "\0\u1ab8\0\u1af1\0\u1b2a\0\u1b63\0\u1b9c\0\u1bd5\0\u1c0e\0\u1c47"+
    "\0\u1c80\0\u1cb9\0\u1cf2\0\u1d2b\0\u1d64\0\u1d9d\0\u1dd6\0\u1e0f"+
    "\0\u1e48\0\u1e81\0\u1eba\0\162\0\u1ef3\0\u1f2c\0\u1f65\0\u1f9e"+
    "\0\u1fd7\0\u2010\0\u2049\0\u2082\0\u20bb\0\u20f4\0\u212d\0\u2166"+
    "\0\u219f\0\162\0\u21d8\0\u2211\0\u224a\0\u2283\0\u22bc\0\u22f5"+
    "\0\u232e\0\u2367\0\u23a0\0\u23d9\0\u2412\0\u244b\0\u2484\0\u24bd"+
    "\0\u24f6\0\u252f\0\u2568\0\u25a1\0\u25da\0\u2613\0\u264c\0\u2685"+
    "\0\u26be\0\u26f7\0\u2730\0\u2769\0\u27a2\0\u27db\0\u2814\0\u284d"+
    "\0\u2886\0\u28bf\0\u28f8\0\162\0\u2931\0\u296a\0\u0d23\0\u29a3"+
    "\0\u29dc\0\u2a15\0\u2a4e\0\u2a87\0\u2ac0\0\u2af9\0\u2b32\0\u2b6b"+
    "\0\u2ba4\0\162\0\u2bdd\0\u2c16\0\u2c4f\0\u2c88\0\u2cc1\0\u2cfa"+
    "\0\u2d33\0\u2d6c\0\u2da5\0\u2dde\0\u2e17\0\u2e50\0\u2e89\0\u2ec2"+
    "\0\u2efb\0\u2f34\0\u2f6d\0\u2fa6\0\u2fdf\0\u3018\0\u3051\0\162"+
    "\0\162\0\u308a\0\u30c3\0\u30fc\0\u3135\0\u316e\0\u31a7\0\u31e0"+
    "\0\162\0\u3219\0\u3252\0\u328b\0\u32c4\0\u32fd\0\u3336\0\u336f"+
    "\0\u33a8\0\u33e1\0\u341a\0\u3453\0\u348c\0\u34c5\0\u34fe\0\u3537"+
    "\0\u3570\0\u35a9\0\u35e2\0\u361b\0\u3654\0\u368d\0\u36c6\0\u36ff"+
    "\0\u3738\0\u3771\0\u37aa\0\u37e3\0\u381c\0\u3855\0\u388e\0\u38c7"+
    "\0\u3900\0\u3939\0\u3972\0\u39ab\0\u39e4\0\u3a1d\0\u3a56\0\u3a8f"+
    "\0\u3ac8\0\u3b01\0\u3b3a\0\u3b73\0\u3bac\0\162\0\u3be5\0\u3c1e"+
    "\0\u3c57\0\u3c90\0\u3cc9\0\u3d02\0\u3c1e\0\u3d3b\0\u3d74\0\u3dad"+
    "\0\u3de6\0\u3e1f\0\u3e58\0\u0d23\0\u3e91\0\u3eca\0\u3f03\0\u3f3c"+
    "\0\u3f75\0\u3fae\0\u3fe7\0\u4020\0\u4059\0\u4092\0\u40cb\0\u4104"+
    "\0\u413d\0\u4176\0\u41af\0\u41e8\0\u4221\0\u425a\0\u4293\0\u42cc"+
    "\0\u4305\0\u433e\0\u4377\0\u43b0\0\u43e9\0\u4422\0\u445b\0\u4494"+
    "\0\u44cd\0\u4506\0\u453f\0\u4578\0\u45b1\0\u45ea\0\u4623\0\u465c"+
    "\0\u4695\0\u46ce\0\u4707\0\u4740\0\u4779\0\u47b2\0\u47eb\0\u4824"+
    "\0\u485d\0\u4896\0\u48cf\0\u4908\0\u4941\0\u497a\0\u49b3\0\162"+
    "\0\u49ec\0\u4a25\0\u4a5e\0\u4a97\0\u4ad0\0\u4b09\0\u4b42\0\u4b7b"+
    "\0\u4bb4\0\u4bed\0\u4c26\0\u4c5f\0\u4c98\0\u4cd1\0\u4d0a\0\u4d43"+
    "\0\u4d7c\0\u4db5\0\u4dee\0\u4e27\0\u4e60\0\u4e99\0\u4ed2\0\u4f0b"+
    "\0\u4f44\0\u4f7d\0\u4fb6\0\u4fef\0\u5028\0\u5061\0\u509a\0\u50d3"+
    "\0\u510c\0\u5145\0\u517e\0\u51b7\0\u51f0\0\u5229\0\253\0\u5262"+
    "\0\u529b\0\u52d4\0\u530d\0\u5346\0\u537f\0\u53b8\0\u53f1\0\u542a"+
    "\0\u5463\0\u549c\0\u54d5\0\u550e\0\u5547\0\u5580\0\u55b9\0\u55f2"+
    "\0\u562b\0\u5664\0\u569d\0\u56d6\0\u570f\0\u5748\0\u5781\0\u57ba"+
    "\0\u57f3\0\u582c\0\u5865\0\u589e\0\u58d7\0\u5910\0\u5949\0\u5982"+
    "\0\u59bb\0\u59f4\0\u5a2d\0\u5a66\0\u5a9f\0\u5ad8\0\u5b11\0\u5b4a"+
    "\0\u5b83\0\u5bbc\0\u5bf5\0\u5c2e\0\162\0\u5c67\0\u5ca0\0\u5cd9"+
    "\0\u5d12\0\u5d4b\0\u5d84\0\u5dbd\0\u5df6\0\u5e2f\0\u5e68\0\u5ea1"+
    "\0\u5eda\0\u5f13\0\u5f4c\0\u5f85\0\u5fbe\0\u5ff7\0\u6030\0\u6069"+
    "\0\u60a2\0\u60db\0\u6114\0\u614d\0\u6186\0\u61bf\0\u61f8\0\u6231"+
    "\0\u626a\0\u62a3\0\u62dc\0\u6315\0\u634e\0\u6387\0\u63c0\0\u63f9"+
    "\0\u6432\0\u646b\0\u64a4\0\u64dd\0\u6516\0\u654f\0\u6588\0\u65c1"+
    "\0\u65fa\0\u6633\0\u666c\0\u66a5\0\u66de\0\u6717\0\u6750\0\u6789"+
    "\0\u67c2\0\u67fb\0\u6834\0\u686d\0\u68a6\0\u68df\0\u6918\0\u6951"+
    "\0\u698a\0\u69c3\0\u69fc\0\u6a35\0\u6a6e\0\u6aa7\0\u6ae0\0\u6b19"+
    "\0\u6b52\0\u6b8b\0\u6bc4\0\u6bfd\0\u6c36\0\u6c6f\0\u6ca8\0\u6ce1"+
    "\0\u6d1a\0\u6d53\0\u6d8c\0\u6dc5\0\u6dfe\0\u6e37\0\u6e70\0\u6ea9"+
    "\0\u6ee2\0\u6f1b\0\u6f54\0\u6f8d\0\u6fc6\0\u6fff\0\u7038\0\u7071"+
    "\0\u70aa\0\u70e3\0\u711c\0\u7155\0\u718e\0\u71c7\0\u7200\0\u7239"+
    "\0\u7272\0\u72ab\0\u72e4\0\u731d\0\u7356\0\u738f\0\u73c8\0\u7401";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[552];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11"+
    "\1\12\1\13\1\14\1\2\1\15\1\16\1\17\1\20"+
    "\1\21\1\3\1\22\1\23\1\24\1\25\1\26\1\27"+
    "\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37"+
    "\1\40\1\41\1\42\1\43\1\44\1\45\1\4\1\46"+
    "\1\47\1\50\1\51\1\52\1\53\1\54\1\3\1\54"+
    "\1\55\1\56\1\5\1\57\1\60\1\61\1\62\1\63"+
    "\1\64\72\0\3\3\1\65\2\66\1\0\1\67\1\0"+
    "\1\66\1\0\22\3\2\0\1\3\2\0\5\3\4\0"+
    "\4\3\2\66\1\3\7\0\3\4\10\0\22\4\2\0"+
    "\1\4\2\0\5\4\4\0\4\4\2\0\1\4\11\0"+
    "\1\5\1\0\2\66\1\0\1\67\1\0\1\66\1\70"+
    "\22\0\1\71\21\0\2\66\1\5\7\0\1\72\1\0"+
    "\1\73\1\74\3\0\1\75\1\0\1\75\1\76\3\72"+
    "\1\0\5\72\1\0\3\72\1\0\1\72\2\0\1\72"+
    "\2\0\1\72\2\0\1\72\1\0\1\72\1\0\1\72"+
    "\1\77\3\0\4\72\2\0\1\73\7\0\1\100\1\0"+
    "\1\101\1\0\2\10\1\0\1\102\1\0\1\66\1\0"+
    "\3\100\1\0\5\100\1\0\3\100\1\0\1\100\2\0"+
    "\1\100\2\0\1\100\1\0\1\103\1\100\1\0\1\100"+
    "\1\0\1\100\1\77\3\0\4\100\2\66\1\101\6\0"+
    "\51\10\1\0\17\10\1\0\3\104\3\0\1\105\1\104"+
    "\3\0\22\104\2\0\1\104\2\0\5\104\4\0\4\104"+
    "\2\0\1\104\11\0\1\73\1\75\2\66\1\0\1\12"+
    "\1\13\1\14\1\76\44\0\2\66\1\73\16\0\3\13"+
    "\57\0\1\100\1\0\1\106\1\75\2\66\1\0\1\107"+
    "\1\13\1\14\1\76\3\100\1\0\5\100\1\0\3\100"+
    "\1\0\1\100\2\0\1\100\2\0\1\100\1\0\1\103"+
    "\1\100\1\0\1\100\1\0\1\100\4\0\4\100\2\66"+
    "\1\106\7\0\1\110\2\3\1\65\2\66\1\0\1\111"+
    "\1\0\1\66\1\0\1\112\1\113\1\110\1\3\4\110"+
    "\1\114\1\3\1\115\1\110\1\114\1\3\1\110\2\3"+
    "\1\116\1\117\1\0\1\110\2\0\1\110\1\3\1\110"+
    "\1\3\1\110\4\0\4\110\2\66\1\3\7\0\3\3"+
    "\1\65\2\66\1\0\1\67\1\0\1\66\1\120\1\3"+
    "\1\121\2\3\1\122\2\3\1\123\1\124\1\125\1\126"+
    "\1\125\1\3\1\123\2\32\2\3\2\0\1\32\2\0"+
    "\5\3\4\0\4\3\2\66\1\3\7\0\3\3\1\65"+
    "\2\66\1\0\1\67\1\0\1\66\1\127\2\3\3\17"+
    "\2\3\1\17\3\3\2\17\5\3\2\0\1\3\2\0"+
    "\5\3\4\0\4\3\2\66\1\3\7\0\3\4\7\0"+
    "\1\127\2\4\3\20\2\4\1\20\3\4\2\20\5\4"+
    "\2\0\1\4\2\0\5\4\4\0\4\4\2\0\1\4"+
    "\7\0\3\3\1\65\2\66\1\0\1\67\1\0\1\66"+
    "\1\130\1\3\1\131\2\17\1\132\1\3\1\133\1\134"+
    "\1\131\1\3\1\123\1\135\1\17\1\123\2\32\1\54"+
    "\1\3\2\0\1\32\2\0\5\3\4\0\1\3\1\54"+
    "\1\3\1\54\2\66\1\3\7\0\3\3\1\65\2\66"+
    "\1\0\1\67\1\0\1\66\1\136\4\3\1\137\1\3"+
    "\1\54\4\3\1\54\4\3\1\54\1\3\2\0\1\3"+
    "\2\0\5\3\4\0\1\3\1\54\1\3\1\54\2\66"+
    "\1\3\7\0\3\3\1\65\2\66\1\0\1\67\1\0"+
    "\1\66\1\140\1\3\1\123\2\17\1\134\2\3\1\134"+
    "\1\123\1\3\1\123\2\17\1\123\1\141\3\3\2\0"+
    "\1\3\2\0\5\3\4\0\4\3\2\66\1\3\7\0"+
    "\3\3\1\65\2\66\1\0\1\142\1\0\1\66\1\120"+
    "\1\143\1\121\2\3\1\131\2\3\1\123\1\24\1\125"+
    "\1\126\1\125\1\143\1\123\2\32\2\3\1\117\1\0"+
    "\1\32\2\0\5\3\4\0\4\3\2\66\1\3\7\0"+
    "\3\4\7\0\1\144\1\4\1\25\6\4\4\25\6\4"+
    "\2\0\1\4\2\0\5\4\4\0\4\4\2\0\1\4"+
    "\7\0\3\3\1\65\2\66\1\0\1\67\1\0\1\66"+
    "\1\145\1\3\1\126\2\3\1\123\2\3\1\123\1\126"+
    "\1\125\1\26\1\146\1\3\1\123\4\3\2\0\1\3"+
    "\2\0\2\43\3\3\4\0\4\3\2\66\1\3\7\0"+
    "\3\3\1\65\2\66\1\0\1\67\1\0\1\66\1\147"+
    "\1\3\1\125\2\17\1\135\1\3\1\54\1\17\2\125"+
    "\1\150\1\151\1\152\3\3\1\54\1\3\2\0\1\3"+
    "\2\0\2\43\3\3\4\0\1\3\1\54\1\3\1\54"+
    "\2\66\1\3\7\0\3\3\1\65\2\66\1\0\1\142"+
    "\1\0\1\66\1\127\1\143\1\3\3\17\2\3\1\17"+
    "\1\143\2\3\1\17\1\30\5\3\1\117\1\0\1\3"+
    "\2\0\5\3\4\0\4\3\2\66\1\3\7\0\3\4"+
    "\7\0\1\153\1\4\1\31\2\4\1\31\2\4\2\31"+
    "\1\4\1\31\2\4\1\31\4\4\2\0\1\4\2\0"+
    "\5\4\4\0\4\4\2\0\1\4\7\0\3\3\1\65"+
    "\2\66\1\0\1\67\1\0\1\66\1\154\1\3\1\32"+
    "\2\3\1\32\3\3\1\32\5\3\2\32\2\3\2\0"+
    "\1\32\2\0\5\3\4\0\4\3\2\66\1\3\7\0"+
    "\3\4\7\0\1\154\1\4\1\33\2\4\1\33\3\4"+
    "\1\33\5\4\2\33\2\4\2\0\1\33\2\0\5\4"+
    "\4\0\4\4\2\0\1\4\7\0\3\4\7\0\1\136"+
    "\4\4\1\155\1\4\1\155\4\4\1\156\4\4\1\155"+
    "\1\4\2\0\1\4\2\0\5\4\4\0\1\4\1\155"+
    "\1\4\1\155\2\0\1\4\7\0\1\110\2\3\1\65"+
    "\2\66\1\0\1\157\1\0\1\66\1\0\1\116\2\110"+
    "\1\3\3\110\1\160\1\110\1\3\3\110\1\3\1\110"+
    "\2\3\1\116\2\0\1\110\2\0\1\110\1\3\1\110"+
    "\1\3\1\110\4\0\4\110\2\66\1\3\12\0\1\161"+
    "\65\0\3\3\1\65\2\66\1\0\1\67\1\0\1\66"+
    "\1\154\1\3\1\32\2\3\1\32\3\3\1\162\5\3"+
    "\2\32\2\3\2\0\1\32\2\0\5\3\4\0\3\3"+
    "\1\163\2\66\1\3\56\0\1\164\21\0\3\3\1\65"+
    "\2\66\1\0\1\67\1\0\1\66\1\165\12\3\2\43"+
    "\6\3\2\0\1\3\2\0\2\43\3\3\4\0\4\3"+
    "\2\66\1\3\7\0\3\4\7\0\1\165\12\4\2\44"+
    "\6\4\2\0\1\4\2\0\2\44\3\4\4\0\4\4"+
    "\2\0\1\4\7\0\3\3\1\65\2\66\1\0\1\67"+
    "\1\0\1\66\1\0\10\3\1\166\11\3\2\0\1\3"+
    "\2\0\5\3\4\0\4\3\2\66\1\3\7\0\3\3"+
    "\1\65\2\66\1\0\1\67\1\0\1\66\1\0\10\3"+
    "\1\167\11\3\2\0\1\3\2\0\1\170\4\3\4\0"+
    "\4\3\2\66\1\3\7\0\3\3\1\65\2\66\1\0"+
    "\1\67\1\0\1\66\1\0\22\3\2\0\1\3\2\0"+
    "\1\171\4\3\4\0\4\3\2\66\1\3\7\0\3\3"+
    "\1\65\2\66\1\0\1\67\1\0\1\66\1\136\4\3"+
    "\1\54\1\3\1\54\4\3\1\54\4\3\1\54\1\3"+
    "\2\0\1\3\2\0\5\3\4\0\1\3\1\54\1\3"+
    "\1\54\2\66\1\3\7\0\1\100\1\0\1\101\1\0"+
    "\2\66\1\0\1\102\1\0\1\66\1\0\3\100\1\0"+
    "\5\100\1\0\3\100\1\0\1\100\2\0\1\100\2\0"+
    "\1\100\1\0\1\103\1\100\1\0\1\100\1\0\1\100"+
    "\1\77\3\0\4\100\1\172\1\66\1\101\7\0\1\100"+
    "\1\0\1\101\1\0\2\66\1\0\1\102\1\0\1\66"+
    "\1\0\3\100\1\0\5\100\1\0\3\100\1\0\1\100"+
    "\2\0\1\100\2\0\1\100\1\0\1\103\1\100\1\0"+
    "\1\100\1\0\1\100\1\77\3\0\4\100\2\66\1\101"+
    "\72\0\1\173\71\0\1\173\7\0\1\65\3\0\1\174"+
    "\31\0\1\175\27\0\1\100\1\0\1\101\1\0\2\66"+
    "\1\0\1\102\1\0\1\66\1\0\3\100\1\0\5\100"+
    "\1\0\3\100\1\0\1\100\2\0\1\100\2\0\1\100"+
    "\1\0\1\103\1\100\1\0\1\100\1\0\1\100\4\0"+
    "\4\100\2\66\1\101\13\0\2\66\1\0\1\67\1\0"+
    "\1\66\45\0\2\66\12\0\1\176\7\0\1\70\46\0"+
    "\1\176\12\0\1\177\65\0\3\72\4\0\1\200\3\0"+
    "\22\72\2\0\1\72\1\0\1\201\5\72\4\0\4\72"+
    "\2\0\1\72\11\0\1\73\7\0\1\76\46\0\1\73"+
    "\7\0\1\72\1\0\1\73\1\202\3\0\1\75\1\0"+
    "\1\75\1\76\3\72\1\0\5\72\1\0\3\72\1\0"+
    "\1\72\2\0\1\72\2\0\1\72\2\0\1\72\1\0"+
    "\1\72\1\0\1\72\4\0\4\72\2\0\1\73\11\0"+
    "\1\73\1\75\3\0\1\75\1\0\1\75\1\76\46\0"+
    "\1\73\11\0\1\203\7\0\1\76\46\0\1\203\7\0"+
    "\3\100\4\0\1\204\3\0\22\100\2\0\1\100\1\0"+
    "\1\103\5\100\4\0\4\100\2\0\1\100\11\0\1\101"+
    "\4\0\1\204\31\0\1\103\17\0\1\101\7\0\1\100"+
    "\1\0\1\101\4\0\1\102\3\0\3\100\1\0\5\100"+
    "\1\0\3\100\1\0\1\100\2\0\1\100\2\0\1\100"+
    "\1\0\1\103\1\100\1\0\1\100\1\0\1\100\4\0"+
    "\4\100\2\0\1\101\50\0\1\103\27\0\3\104\3\0"+
    "\1\205\1\104\3\0\22\104\2\0\1\104\2\0\5\104"+
    "\4\0\4\104\2\0\1\104\11\0\1\106\4\0\1\204"+
    "\2\0\1\76\26\0\1\103\17\0\1\106\7\0\1\100"+
    "\1\0\1\106\1\75\3\0\1\107\1\13\1\206\1\76"+
    "\3\100\1\0\5\100\1\0\3\100\1\0\1\100\2\0"+
    "\1\100\2\0\1\100\1\0\1\103\1\100\1\0\1\100"+
    "\1\0\1\100\4\0\4\100\2\0\1\106\7\0\3\110"+
    "\1\65\2\66\1\0\1\207\1\0\1\210\1\0\22\110"+
    "\2\0\1\110\1\211\1\0\5\110\1\211\3\0\4\110"+
    "\2\66\1\110\3\0\1\211\3\0\1\212\3\0\2\66"+
    "\1\0\1\111\1\0\1\66\1\0\3\212\1\0\5\212"+
    "\1\0\3\212\1\0\1\212\2\0\1\212\1\117\1\0"+
    "\1\212\2\0\1\212\1\0\1\212\1\0\1\212\4\0"+
    "\4\212\2\66\10\0\3\110\1\65\2\66\1\0\1\213"+
    "\1\0\1\210\1\0\1\112\7\110\1\114\3\110\1\114"+
    "\4\110\1\116\1\117\1\0\1\110\1\211\1\0\5\110"+
    "\1\211\3\0\4\110\2\66\1\110\3\0\1\211\3\0"+
    "\3\110\1\65\2\66\1\0\1\207\1\0\1\210\1\0"+
    "\10\110\1\214\11\110\2\0\1\110\1\211\1\0\5\110"+
    "\1\211\3\0\4\110\2\66\1\110\3\0\1\211\3\0"+
    "\3\110\1\65\2\66\1\0\1\215\1\0\1\210\1\0"+
    "\1\114\7\110\1\114\3\110\1\114\5\110\1\117\1\0"+
    "\1\110\1\211\1\0\5\110\1\211\3\0\4\110\2\66"+
    "\1\110\3\0\1\211\3\0\3\110\1\65\2\66\1\0"+
    "\1\207\1\0\1\210\1\0\1\110\1\216\20\110\2\0"+
    "\1\110\1\211\1\0\5\110\1\211\3\0\4\110\2\66"+
    "\1\110\3\0\1\211\3\0\3\110\1\65\2\66\1\0"+
    "\1\217\1\0\1\210\1\0\1\116\20\110\1\116\2\0"+
    "\1\110\1\211\1\0\5\110\1\211\3\0\4\110\2\66"+
    "\1\110\3\0\1\211\12\0\1\220\12\0\1\221\3\0"+
    "\1\221\5\0\1\221\1\117\45\0\1\120\1\0\1\222"+
    "\1\223\1\0\3\222\1\224\1\225\1\226\1\222\1\227"+
    "\1\225\1\230\2\231\2\223\2\0\1\231\31\0\3\3"+
    "\1\65\2\66\1\0\1\67\1\0\1\66\1\120\1\3"+
    "\1\121\2\3\1\131\2\3\1\123\1\121\1\125\1\126"+
    "\1\125\1\3\1\123\2\32\2\3\2\0\1\32\2\0"+
    "\5\3\4\0\4\3\2\66\1\3\7\0\3\3\1\65"+
    "\2\66\1\0\1\67\1\0\1\66\1\232\1\3\1\131"+
    "\2\3\1\233\2\3\1\123\1\131\1\3\1\123\2\3"+
    "\1\123\2\32\2\3\2\0\1\32\2\0\5\3\4\0"+
    "\4\3\2\66\1\3\7\0\3\3\1\65\2\66\1\0"+
    "\1\67\1\0\1\66\1\153\1\3\1\123\2\3\1\123"+
    "\2\3\2\123\1\3\1\123\2\3\1\123\4\3\2\0"+
    "\1\3\2\0\5\3\4\0\4\3\2\66\1\3\7\0"+
    "\3\3\1\65\2\66\1\0\1\67\1\0\1\66\1\120"+
    "\1\3\1\121\1\234\1\3\1\131\2\3\1\235\1\121"+
    "\1\125\1\126\1\125\1\3\1\123\2\32\2\3\2\0"+
    "\1\32\2\0\5\3\4\0\4\3\2\66\1\3\7\0"+
    "\3\3\1\65\2\66\1\0\1\67\1\0\1\66\1\144"+
    "\1\3\1\125\6\3\4\125\6\3\2\0\1\3\2\0"+
    "\5\3\4\0\4\3\2\66\1\3\7\0\3\3\1\65"+
    "\2\66\1\0\1\67\1\0\1\66\1\236\1\3\1\126"+
    "\2\3\1\123\2\3\1\123\1\126\1\125\1\126\1\125"+
    "\1\3\1\123\4\3\2\0\1\3\2\0\5\3\4\0"+
    "\4\3\2\66\1\3\21\0\1\127\3\0\5\237\2\0"+
    "\3\237\53\0\1\130\1\0\1\240\1\223\1\237\3\241"+
    "\1\242\1\243\1\0\1\241\1\244\1\245\1\230\1\246"+
    "\1\231\2\223\2\0\1\231\31\0\3\3\1\65\2\66"+
    "\1\0\1\67\1\0\1\66\1\232\1\3\1\131\2\3"+
    "\1\131\2\3\1\123\1\131\1\3\1\123\2\3\1\123"+
    "\2\32\2\3\2\0\1\32\2\0\5\3\4\0\4\3"+
    "\2\66\1\3\7\0\3\3\1\65\2\66\1\0\1\67"+
    "\1\0\1\66\1\130\1\3\1\131\2\17\1\132\1\3"+
    "\1\54\1\134\1\131\1\3\1\123\1\135\1\17\1\123"+
    "\2\32\1\54\1\3\2\0\1\32\2\0\5\3\4\0"+
    "\1\3\1\54\1\3\1\54\2\66\1\3\7\0\3\3"+
    "\1\65\2\66\1\0\1\67\1\0\1\66\1\136\4\3"+
    "\1\54\1\3\1\54\4\3\1\54\4\3\1\54\1\3"+
    "\2\0\1\3\2\0\4\3\1\247\4\0\1\3\1\54"+
    "\1\3\1\54\2\66\1\3\7\0\3\3\1\65\2\66"+
    "\1\0\1\67\1\0\1\66\1\140\1\3\1\123\2\17"+
    "\1\134\2\3\1\134\1\123\1\3\1\123\2\17\1\123"+
    "\4\3\2\0\1\3\2\0\5\3\4\0\4\3\2\66"+
    "\1\3\7\0\3\3\1\65\2\66\1\0\1\67\1\0"+
    "\1\66\1\250\2\3\2\17\1\135\1\3\1\54\1\17"+
    "\3\3\1\135\1\17\3\3\1\54\1\3\2\0\1\3"+
    "\2\0\5\3\4\0\1\3\1\54\1\3\1\54\2\66"+
    "\1\3\21\0\1\136\10\0\1\251\2\0\1\251\2\0"+
    "\1\251\37\0\3\3\1\65\2\66\1\0\1\67\1\0"+
    "\1\66\1\136\4\3\1\54\1\3\1\54\1\252\3\3"+
    "\1\54\4\3\1\54\1\3\2\0\1\3\2\0\5\3"+
    "\4\0\1\3\1\54\1\3\1\54\2\66\1\3\21\0"+
    "\1\140\1\0\1\230\1\223\1\237\3\253\1\242\1\224"+
    "\1\0\1\253\1\254\1\242\1\230\2\0\2\223\34\0"+
    "\3\3\1\65\2\66\1\0\1\67\1\0\1\66\1\0"+
    "\1\3\1\255\20\3\2\0\1\3\2\0\5\3\4\0"+
    "\4\3\2\66\1\3\13\0\2\66\1\0\1\142\1\0"+
    "\1\66\23\0\1\117\21\0\2\66\10\0\3\3\1\65"+
    "\2\66\1\0\1\142\1\0\1\66\1\0\1\143\7\3"+
    "\1\143\3\3\1\143\5\3\1\117\1\0\1\3\2\0"+
    "\5\3\4\0\4\3\2\66\1\3\21\0\1\144\1\0"+
    "\1\226\2\0\3\226\1\0\5\226\53\0\1\145\1\0"+
    "\1\256\1\257\1\0\1\260\1\261\1\262\1\263\1\264"+
    "\1\226\1\265\1\266\1\267\1\230\1\270\1\0\1\223"+
    "\1\271\7\0\1\272\1\273\1\274\4\0\1\275\1\276"+
    "\1\277\13\0\3\3\1\65\2\66\1\0\1\67\1\0"+
    "\1\66\1\300\1\3\1\125\6\3\2\125\2\146\6\3"+
    "\2\0\1\3\2\0\2\43\3\3\4\0\4\3\2\66"+
    "\1\3\21\0\1\147\1\0\1\301\1\302\1\237\1\303"+
    "\1\304\1\305\1\306\1\307\1\226\1\310\1\311\1\312"+
    "\1\0\1\313\2\0\1\273\7\0\1\272\1\273\1\274"+
    "\4\0\1\275\1\276\1\277\13\0\3\3\1\65\2\66"+
    "\1\0\1\67\1\0\1\66\1\300\1\3\1\125\5\3"+
    "\1\314\2\125\2\146\6\3\2\0\1\3\2\0\2\43"+
    "\3\3\4\0\4\3\2\66\1\3\7\0\3\3\1\65"+
    "\2\66\1\0\1\67\1\0\1\66\1\147\1\3\1\125"+
    "\2\17\1\135\1\3\1\54\1\17\2\125\1\146\1\151"+
    "\1\17\3\3\1\54\1\3\2\0\1\3\2\0\2\43"+
    "\3\3\4\0\1\3\1\54\1\3\1\54\2\66\1\3"+
    "\7\0\3\3\1\65\2\66\1\0\1\67\1\0\1\66"+
    "\1\127\2\3\3\17\2\3\1\17\3\3\2\17\1\3"+
    "\1\315\3\3\2\0\1\3\2\0\5\3\4\0\4\3"+
    "\2\66\1\3\21\0\1\153\1\0\1\230\1\223\1\0"+
    "\3\230\2\224\1\0\1\230\1\223\1\224\1\230\2\0"+
    "\2\223\46\0\1\154\1\0\1\231\2\0\3\231\1\0"+
    "\1\231\1\0\1\231\1\0\1\231\1\0\2\231\4\0"+
    "\1\231\31\0\3\4\7\0\1\136\4\4\1\155\1\4"+
    "\1\155\4\4\1\155\4\4\1\155\1\4\2\0\1\4"+
    "\2\0\5\4\4\0\1\4\1\155\1\4\1\155\2\0"+
    "\1\4\7\0\3\4\7\0\1\136\4\4\1\155\1\4"+
    "\1\155\4\4\1\155\1\316\3\4\1\155\1\4\2\0"+
    "\1\4\2\0\5\4\4\0\1\4\1\155\1\4\1\155"+
    "\2\0\1\4\7\0\1\212\3\0\2\66\1\0\1\157"+
    "\1\0\1\66\1\0\3\212\1\0\5\212\1\0\3\212"+
    "\1\0\1\212\2\0\1\212\2\0\1\212\2\0\1\212"+
    "\1\0\1\212\1\0\1\212\4\0\4\212\2\66\10\0"+
    "\3\110\1\65\2\66\1\0\1\207\1\0\1\210\1\0"+
    "\13\110\1\317\6\110\2\0\1\110\1\211\1\0\5\110"+
    "\1\211\3\0\4\110\2\66\1\110\3\0\1\211\5\0"+
    "\1\320\56\0\1\320\7\0\3\3\1\65\2\66\1\0"+
    "\1\67\1\0\1\66\1\154\1\3\1\32\2\3\1\32"+
    "\3\3\1\321\5\3\2\32\2\3\2\0\1\32\2\0"+
    "\5\3\4\0\4\3\2\66\1\3\7\0\3\3\1\65"+
    "\2\66\1\0\1\67\1\0\1\66\1\0\13\3\1\322"+
    "\6\3\2\0\1\3\2\0\5\3\4\0\4\3\2\66"+
    "\1\3\21\0\1\165\1\0\2\302\2\0\1\275\1\323"+
    "\1\324\1\325\1\0\1\326\1\327\1\330\1\0\1\270"+
    "\2\0\1\273\7\0\1\272\1\273\1\274\4\0\1\275"+
    "\1\276\1\277\13\0\3\3\1\65\2\66\1\0\1\67"+
    "\1\0\1\66\1\0\16\3\1\331\3\3\2\0\1\3"+
    "\2\0\5\3\4\0\4\3\2\66\1\3\7\0\3\3"+
    "\1\65\2\66\1\0\1\67\1\0\1\66\1\0\6\3"+
    "\1\332\13\3\2\0\1\3\2\0\5\3\4\0\4\3"+
    "\2\66\1\3\7\0\3\3\1\65\2\66\1\0\1\67"+
    "\1\0\1\66\1\0\12\3\1\333\7\3\2\0\1\3"+
    "\2\0\5\3\4\0\4\3\2\66\1\3\7\0\3\3"+
    "\1\65\2\66\1\0\1\67\1\0\1\66\1\0\21\3"+
    "\1\334\2\0\1\3\2\0\5\3\4\0\4\3\2\66"+
    "\1\3\16\0\1\174\31\0\1\175\70\0\1\175\31\0"+
    "\1\176\56\0\1\176\11\0\1\335\56\0\1\335\16\0"+
    "\1\200\31\0\1\201\70\0\1\201\31\0\1\203\56\0"+
    "\1\203\16\0\1\204\31\0\1\103\35\0\1\205\64\0"+
    "\1\73\1\75\3\0\1\206\1\13\1\206\1\76\46\0"+
    "\1\73\13\0\2\66\1\0\1\207\1\0\1\210\26\0"+
    "\1\211\6\0\1\211\7\0\2\66\4\0\1\211\3\0"+
    "\1\336\1\337\1\340\1\0\2\66\1\0\1\341\1\0"+
    "\1\210\1\0\3\336\1\337\5\336\1\337\3\336\1\337"+
    "\1\336\2\337\1\336\2\0\1\336\1\211\1\103\1\336"+
    "\1\337\1\336\1\337\1\336\1\211\1\0\1\342\1\0"+
    "\4\336\2\66\1\340\3\0\1\211\3\0\3\337\4\0"+
    "\1\343\1\0\1\211\1\0\22\337\2\0\1\337\1\211"+
    "\1\0\5\337\1\211\1\0\1\342\1\0\4\337\2\0"+
    "\1\337\3\0\1\211\3\0\3\212\4\0\1\344\1\0"+
    "\1\211\1\0\22\212\2\0\1\212\1\211\1\0\5\212"+
    "\1\211\3\0\4\212\2\0\1\212\3\0\1\211\3\0"+
    "\1\212\3\0\2\66\1\0\1\213\1\0\1\210\1\0"+
    "\3\212\1\0\5\212\1\0\3\212\1\0\1\212\2\0"+
    "\1\212\1\117\1\0\1\212\1\211\1\0\1\212\1\0"+
    "\1\212\1\0\1\212\1\211\3\0\4\212\2\66\4\0"+
    "\1\211\3\0\3\110\1\65\2\66\1\0\1\207\1\0"+
    "\1\210\1\0\12\110\1\160\7\110\2\0\1\110\1\211"+
    "\1\0\5\110\1\211\3\0\4\110\2\66\1\110\3\0"+
    "\1\211\7\0\2\66\1\0\1\215\1\0\1\210\23\0"+
    "\1\117\2\0\1\211\6\0\1\211\7\0\2\66\4\0"+
    "\1\211\3\0\3\110\1\65\2\66\1\0\1\207\1\0"+
    "\1\210\1\0\6\110\1\345\13\110\2\0\1\110\1\211"+
    "\1\0\5\110\1\211\3\0\4\110\2\66\1\110\3\0"+
    "\1\211\3\0\1\212\3\0\2\66\1\0\1\217\1\0"+
    "\1\210\1\0\3\212\1\0\5\212\1\0\3\212\1\0"+
    "\1\212\2\0\1\212\2\0\1\212\1\211\1\0\1\212"+
    "\1\0\1\212\1\0\1\212\1\211\3\0\4\212\2\66"+
    "\4\0\1\211\12\0\1\220\12\0\1\221\3\0\1\221"+
    "\5\0\1\221\34\0\1\346\6\0\1\347\3\0\3\346"+
    "\1\0\3\346\1\350\1\346\1\0\1\346\1\350\1\346"+
    "\1\0\1\346\2\0\1\350\2\0\1\346\2\0\1\346"+
    "\1\0\1\346\1\0\1\346\4\0\4\346\26\0\1\222"+
    "\2\0\3\222\1\230\1\222\1\226\1\222\1\226\1\222"+
    "\1\230\2\231\2\0\1\351\1\0\1\231\46\0\1\223"+
    "\4\0\2\223\2\0\2\223\3\0\2\223\1\352\47\0"+
    "\1\230\1\223\1\0\3\230\2\224\1\0\1\230\1\223"+
    "\1\224\1\230\2\0\2\223\1\353\47\0\1\222\1\223"+
    "\1\0\3\222\1\224\1\225\1\226\1\222\1\227\1\225"+
    "\1\230\2\231\2\223\1\354\1\0\1\231\45\0\1\226"+
    "\2\0\3\226\1\0\5\226\5\0\1\351\47\0\1\226"+
    "\1\223\1\0\3\226\1\223\1\227\2\226\2\227\3\0"+
    "\2\223\1\354\47\0\1\230\2\0\5\230\1\0\1\230"+
    "\1\0\2\230\4\0\1\355\47\0\1\231\2\0\3\231"+
    "\1\0\1\231\1\0\1\231\1\0\1\231\1\0\2\231"+
    "\2\0\1\356\1\0\1\231\43\0\1\232\1\0\1\240"+
    "\1\223\1\0\3\240\1\224\1\357\1\0\1\240\1\223"+
    "\1\357\1\230\2\231\2\223\2\0\1\231\31\0\3\3"+
    "\1\65\2\66\1\0\1\67\1\0\1\66\1\232\1\3"+
    "\1\131\2\3\1\131\2\3\1\123\1\131\1\3\1\123"+
    "\1\3\1\360\1\123\2\32\2\3\2\0\1\32\2\0"+
    "\5\3\4\0\4\3\2\66\1\3\7\0\3\3\1\65"+
    "\2\66\1\0\1\67\1\0\1\66\1\153\1\3\1\123"+
    "\1\361\1\3\1\123\2\3\2\123\1\3\1\123\2\3"+
    "\1\123\4\3\2\0\1\3\2\0\5\3\4\0\4\3"+
    "\2\66\1\3\21\0\1\236\1\0\1\260\1\223\1\0"+
    "\3\260\1\224\1\362\1\226\1\260\1\227\1\362\1\230"+
    "\2\0\2\223\52\0\5\237\2\0\3\237\5\0\1\363"+
    "\47\0\1\240\2\0\3\240\1\230\1\240\1\0\1\240"+
    "\1\0\1\240\1\230\2\231\2\0\1\355\1\0\1\231"+
    "\45\0\1\240\1\0\1\237\3\241\1\253\1\240\1\0"+
    "\1\241\1\237\1\241\1\230\2\231\2\0\1\363\1\0"+
    "\1\231\45\0\1\230\1\223\1\237\3\253\1\242\1\224"+
    "\1\0\1\253\1\254\1\242\1\230\2\0\2\223\1\364"+
    "\45\0\1\365\1\0\1\240\1\223\1\0\3\240\1\224"+
    "\1\243\1\0\1\240\1\366\1\357\1\230\1\246\1\231"+
    "\2\223\1\353\1\0\1\231\43\0\1\365\2\0\1\223"+
    "\4\237\1\254\1\366\1\0\1\237\1\244\1\254\1\0"+
    "\1\251\1\0\2\223\1\364\47\0\1\240\1\223\1\237"+
    "\3\241\1\242\1\357\1\0\1\241\1\254\1\245\1\230"+
    "\2\231\2\223\1\364\1\0\1\231\43\0\1\365\1\0"+
    "\1\231\2\0\3\231\1\0\1\246\1\0\1\231\1\251"+
    "\1\231\1\0\1\246\1\231\2\0\1\356\1\0\1\231"+
    "\31\0\3\3\1\65\2\66\1\0\1\67\1\0\1\66"+
    "\1\0\14\3\1\367\5\3\2\0\1\3\2\0\5\3"+
    "\4\0\4\3\2\66\1\3\21\0\1\250\3\0\5\237"+
    "\1\251\1\0\1\237\1\370\1\237\1\0\1\251\51\0"+
    "\1\365\10\0\1\251\2\0\1\251\2\0\1\251\53\0"+
    "\1\230\1\0\1\237\4\253\1\230\1\0\1\253\1\237"+
    "\1\253\1\230\4\0\1\363\50\0\1\223\4\237\1\254"+
    "\1\223\1\0\1\237\2\254\3\0\2\223\1\364\33\0"+
    "\3\3\1\65\2\66\1\0\1\67\1\0\1\66\1\0"+
    "\1\3\1\371\20\3\2\0\1\3\2\0\5\3\4\0"+
    "\4\3\2\66\1\3\23\0\1\256\1\302\1\0\3\260"+
    "\1\230\1\256\1\226\1\260\1\226\1\260\1\230\4\0"+
    "\1\372\47\0\1\302\1\257\4\0\1\223\1\257\2\0"+
    "\2\223\3\0\2\223\1\373\47\0\1\260\2\0\3\260"+
    "\1\230\1\260\1\226\1\260\1\226\1\260\1\230\4\0"+
    "\1\351\47\0\1\260\2\0\1\260\1\261\1\260\1\230"+
    "\1\261\1\226\1\260\1\226\1\260\1\230\4\0\1\374"+
    "\15\0\1\275\31\0\1\260\2\0\2\260\1\262\1\375"+
    "\1\376\1\226\1\377\1\u0100\1\u0101\1\230\3\0\1\273"+
    "\1\u0102\6\0\2\273\1\274\6\0\1\277\27\0\1\230"+
    "\1\223\1\0\2\230\1\375\2\263\1\0\1\375\1\271"+
    "\1\u0103\1\230\1\270\1\0\1\223\1\271\1\u0104\6\0"+
    "\1\324\1\273\37\0\1\256\1\257\1\0\1\260\1\261"+
    "\1\376\1\263\1\264\1\226\1\265\1\u0105\1\u0106\1\230"+
    "\1\270\1\0\1\223\1\271\1\u0107\6\0\1\272\1\273"+
    "\1\274\4\0\1\275\1\276\30\0\1\260\2\0\2\260"+
    "\1\377\1\375\1\265\1\226\1\265\1\u0108\1\u0109\1\230"+
    "\3\0\1\273\1\u0102\6\0\1\326\1\273\6\0\1\276"+
    "\30\0\1\226\1\223\1\0\2\226\1\u0100\1\271\1\u0105"+
    "\1\226\1\u0108\1\266\1\u010a\3\0\1\223\1\271\1\u0107"+
    "\6\0\2\273\7\0\1\277\27\0\1\260\1\223\1\0"+
    "\2\260\1\u0101\1\u0103\1\u0106\1\226\1\u0109\1\u010a\1\267"+
    "\1\230\1\270\1\0\2\223\1\u010b\6\0\1\u010c\7\0"+
    "\1\276\1\277\35\0\2\270\3\0\1\270\1\0\1\270"+
    "\3\0\1\u010d\6\0\1\270\41\0\1\223\3\0\1\273"+
    "\2\271\1\0\1\273\1\271\1\223\3\0\1\223\1\271"+
    "\1\u010e\6\0\2\273\44\0\1\273\1\324\1\272\1\0"+
    "\1\326\1\273\1\u010c\1\0\1\270\2\0\1\273\1\u010f"+
    "\6\0\1\272\1\273\6\0\1\276\35\0\3\273\1\0"+
    "\2\273\5\0\1\273\1\u010f\6\0\2\273\44\0\1\274"+
    "\1\0\1\274\11\0\1\u0110\10\0\1\274\42\0\1\275"+
    "\2\0\1\275\11\0\1\u0111\15\0\1\275\40\0\1\276"+
    "\1\0\1\276\1\0\1\276\5\0\1\u0112\6\0\1\276"+
    "\7\0\1\276\35\0\1\277\4\0\2\277\5\0\1\u0113"+
    "\17\0\1\277\25\0\1\300\1\0\1\301\1\302\1\0"+
    "\1\226\1\u0114\1\u0115\1\324\1\u0116\1\226\1\u0117\1\u0100"+
    "\1\u0118\1\0\1\270\2\0\1\273\7\0\1\272\1\273"+
    "\1\274\4\0\1\275\1\276\1\277\27\0\1\301\1\302"+
    "\1\0\3\226\1\0\1\301\4\226\5\0\1\372\47\0"+
    "\2\302\5\0\1\302\11\0\1\u0119\47\0\1\226\1\0"+
    "\1\237\3\303\1\237\2\226\3\303\5\0\1\363\47\0"+
    "\1\226\1\0\1\237\1\303\1\304\1\303\1\237\1\u0114"+
    "\1\226\3\303\5\0\1\u011a\15\0\1\275\31\0\1\226"+
    "\1\0\1\237\2\303\1\305\1\u011b\1\u011c\1\226\1\u011d"+
    "\1\u011e\1\u011f\4\0\1\273\1\u0120\6\0\2\273\1\274"+
    "\6\0\1\277\31\0\3\237\1\u011b\1\306\1\324\1\0"+
    "\2\u011b\1\u0121\1\0\1\270\2\0\1\273\1\u0120\6\0"+
    "\1\324\1\273\35\0\1\365\1\0\1\301\1\302\1\0"+
    "\1\226\1\u0114\1\u011c\1\324\1\307\1\226\1\u0117\1\u0122"+
    "\1\u0123\1\0\1\313\2\0\1\273\1\u0102\6\0\1\272"+
    "\1\273\1\274\4\0\1\275\1\276\30\0\1\226\1\0"+
    "\1\237\2\303\1\u011d\1\u011b\1\u0117\1\226\1\310\1\u011d"+
    "\1\u0124\4\0\1\273\1\u0120\6\0\1\326\1\273\6\0"+
    "\1\276\26\0\1\365\1\0\1\226\1\0\1\237\2\303"+
    "\1\u011e\1\u011b\1\u0122\1\226\1\u011d\1\311\1\u011f\1\0"+
    "\1\251\2\0\1\273\1\u0120\6\0\2\273\7\0\1\277"+
    "\27\0\1\226\1\0\1\237\2\303\1\u011f\1\u0121\1\u0123"+
    "\1\226\1\u0124\1\u011f\1\312\1\0\1\270\3\0\1\u0125"+
    "\6\0\1\u010c\7\0\1\276\1\277\25\0\1\365\7\0"+
    "\1\270\1\313\2\0\1\251\1\270\1\0\1\313\3\0"+
    "\1\u010d\6\0\1\270\24\0\3\3\1\65\2\66\1\0"+
    "\1\67\1\0\1\66\1\0\4\3\1\u0126\15\3\2\0"+
    "\1\3\2\0\5\3\4\0\4\3\2\66\1\3\7\0"+
    "\3\4\10\0\21\4\1\u0127\2\0\1\4\2\0\5\4"+
    "\4\0\4\4\2\0\1\4\11\0\1\320\33\0\1\u0128"+
    "\22\0\1\320\7\0\3\3\1\65\2\66\1\0\1\67"+
    "\1\0\1\66\1\154\1\3\1\u0129\2\3\1\32\3\3"+
    "\1\32\5\3\2\32\2\3\2\0\1\32\2\0\5\3"+
    "\4\0\4\3\2\66\1\3\7\0\3\3\1\65\2\66"+
    "\1\0\1\67\1\0\1\66\1\0\4\3\1\361\15\3"+
    "\2\0\1\3\2\0\5\3\4\0\4\3\2\66\1\3"+
    "\30\0\1\323\1\273\1\u012a\1\0\1\273\1\327\1\277"+
    "\4\0\1\273\1\u010f\6\0\2\273\1\274\6\0\1\277"+
    "\34\0\1\273\2\324\1\0\2\273\1\270\1\0\1\270"+
    "\2\0\1\273\1\u010f\6\0\1\324\1\273\37\0\2\302"+
    "\2\0\1\275\1\u012a\1\324\1\325\1\0\1\326\1\273"+
    "\1\u010c\1\0\1\270\2\0\1\273\1\u010f\6\0\1\272"+
    "\1\273\1\274\4\0\1\275\1\276\35\0\2\273\1\326"+
    "\1\0\1\326\1\273\1\276\4\0\1\273\1\u010f\6\0"+
    "\1\326\1\273\6\0\1\276\35\0\1\327\2\273\1\0"+
    "\1\273\1\327\1\277\4\0\1\273\1\u010f\6\0\2\273"+
    "\7\0\1\277\34\0\1\277\1\270\1\u010c\1\0\1\276"+
    "\1\277\1\330\1\0\1\270\3\0\1\u010d\6\0\1\u010c"+
    "\7\0\1\276\1\277\13\0\3\3\1\65\2\66\1\0"+
    "\1\67\1\0\1\66\1\0\22\3\2\0\1\u012b\2\0"+
    "\5\3\4\0\4\3\2\66\1\3\7\0\3\3\1\65"+
    "\2\66\1\0\1\67\1\0\1\66\1\0\14\3\1\361"+
    "\5\3\2\0\1\3\2\0\5\3\4\0\4\3\2\66"+
    "\1\3\7\0\3\3\1\65\2\66\1\0\1\67\1\0"+
    "\1\66\1\0\1\3\1\u012c\20\3\2\0\1\3\2\0"+
    "\5\3\4\0\4\3\2\66\1\3\11\0\1\335\33\0"+
    "\1\u012d\22\0\1\335\7\0\3\336\4\0\1\u012e\3\0"+
    "\22\336\2\0\1\336\1\0\1\103\5\336\2\0\1\342"+
    "\1\0\4\336\2\0\1\336\7\0\3\337\4\0\1\u012f"+
    "\3\0\22\337\2\0\1\337\2\0\5\337\2\0\1\342"+
    "\1\0\4\337\2\0\1\337\7\0\2\337\1\340\4\0"+
    "\1\u012e\3\0\22\337\2\0\1\337\1\0\1\103\5\337"+
    "\2\0\1\342\1\0\4\337\2\0\1\340\7\0\1\336"+
    "\1\337\1\340\4\0\1\341\3\0\3\336\1\337\5\336"+
    "\1\337\3\336\1\337\1\336\2\337\1\336\2\0\1\336"+
    "\1\0\1\103\1\336\1\337\1\336\1\337\1\336\2\0"+
    "\1\342\1\0\4\336\2\0\1\340\16\0\1\u0130\2\u0131"+
    "\5\0\1\u0132\1\0\1\u0132\4\0\1\u0132\4\0\1\u0132"+
    "\14\0\1\u0133\1\342\2\0\1\u0132\1\0\1\u0132\12\0"+
    "\3\337\4\0\1\343\3\0\22\337\2\0\1\337\2\0"+
    "\5\337\2\0\1\342\1\0\4\337\2\0\1\337\16\0"+
    "\1\344\1\0\1\211\26\0\1\211\6\0\1\211\15\0"+
    "\1\211\3\0\3\110\1\65\2\66\1\0\1\207\1\0"+
    "\1\210\1\0\4\110\1\u0134\15\110\2\0\1\110\1\211"+
    "\1\0\5\110\1\211\3\0\4\110\2\66\1\110\3\0"+
    "\1\211\3\0\3\346\4\0\1\u0135\3\0\22\346\2\0"+
    "\1\346\2\0\5\346\1\u0136\3\0\4\346\2\0\1\346"+
    "\7\0\1\346\6\0\1\347\3\0\3\346\1\0\5\346"+
    "\1\0\3\346\1\0\1\346\2\0\1\346\2\0\1\346"+
    "\2\0\1\346\1\0\1\346\1\0\1\346\4\0\4\346"+
    "\12\0\3\346\4\0\1\u0137\3\0\7\346\1\350\3\346"+
    "\1\350\5\346\1\350\2\0\1\346\2\0\5\346\1\u0136"+
    "\3\0\4\346\2\0\1\346\15\0\1\u0138\26\0\1\351"+
    "\33\0\3\u0139\4\0\1\u0139\3\0\22\u0139\1\352\1\u013a"+
    "\1\u0139\2\0\5\u0139\4\0\4\u0139\2\0\1\u0139\7\0"+
    "\3\u0139\3\0\1\u013b\1\u0139\3\0\22\u0139\1\353\1\u013a"+
    "\1\u0139\2\0\5\u0139\4\0\4\u0139\2\0\1\u0139\7\0"+
    "\3\u0139\3\0\1\u0138\1\u0139\3\0\22\u0139\1\354\1\u013a"+
    "\1\u0139\2\0\5\u0139\4\0\4\u0139\2\0\1\u0139\15\0"+
    "\1\u013b\26\0\1\355\41\0\1\u013c\26\0\1\356\47\0"+
    "\1\240\1\223\1\0\3\240\1\224\1\357\1\0\1\240"+
    "\1\223\1\357\1\230\2\231\2\223\1\353\1\0\1\231"+
    "\45\0\1\260\1\223\1\0\3\260\1\224\1\362\1\226"+
    "\1\260\1\227\1\362\1\230\2\0\2\223\1\354\41\0"+
    "\1\u013d\26\0\1\363\33\0\3\u0139\3\0\1\u013d\1\u0139"+
    "\3\0\22\u0139\1\364\1\u013a\1\u0139\2\0\5\u0139\4\0"+
    "\4\u0139\2\0\1\u0139\21\0\1\365\1\0\1\u013e\3\0"+
    "\1\u013e\1\0\1\u013e\3\0\2\u013e\4\0\1\u013e\46\0"+
    "\1\365\2\0\1\223\4\0\1\223\1\366\2\0\1\366"+
    "\1\223\1\0\1\251\1\0\2\223\1\352\33\0\3\3"+
    "\1\65\2\66\1\0\1\67\1\0\1\66\1\0\21\3"+
    "\1\u013f\2\0\1\3\2\0\5\3\4\0\4\3\2\66"+
    "\1\3\21\0\1\365\3\0\5\237\1\251\1\0\1\237"+
    "\1\370\1\237\1\0\1\251\3\0\1\363\35\0\1\u0140"+
    "\3\0\1\u0138\26\0\1\u0141\23\0\1\u0140\7\0\2\u0139"+
    "\1\u0142\4\0\1\u0139\3\0\22\u0139\1\u0143\1\u013a\1\u0139"+
    "\2\0\5\u0139\4\0\4\u0139\2\0\1\u0142\11\0\1\u0144"+
    "\3\0\1\u0138\26\0\1\u0145\23\0\1\u0144\23\0\1\230"+
    "\2\0\2\230\3\375\1\0\1\375\1\273\2\230\3\0"+
    "\1\273\1\u0146\6\0\2\273\37\0\1\260\2\0\2\260"+
    "\1\376\1\375\1\376\1\226\1\377\1\u0108\1\260\1\230"+
    "\3\0\1\273\1\u0102\6\0\2\273\1\274\36\0\1\260"+
    "\2\0\2\260\1\377\1\375\1\377\1\226\1\377\1\u0108"+
    "\1\260\1\230\3\0\1\273\1\u0102\6\0\2\273\37\0"+
    "\1\226\2\0\2\226\1\u0100\1\273\1\u0108\1\226\1\u0108"+
    "\1\u0100\1\u0147\4\0\1\273\1\u0102\6\0\2\273\7\0"+
    "\1\277\27\0\1\260\2\0\2\260\1\u0101\1\230\1\260"+
    "\1\226\1\260\1\u0147\1\u0101\1\230\4\0\1\u0148\17\0"+
    "\1\277\15\0\1\u0149\3\0\1\u0138\26\0\1\u014a\23\0"+
    "\1\u0149\23\0\1\230\1\223\1\0\3\230\2\u0103\1\0"+
    "\1\230\1\223\1\u0103\1\230\1\270\1\0\2\223\1\u014b"+
    "\6\0\1\270\24\0\2\u0139\1\u014c\3\0\1\u013b\1\u0139"+
    "\3\0\22\u0139\1\u014d\1\u013a\1\u0139\2\0\5\u0139\4\0"+
    "\4\u0139\2\0\1\u014c\23\0\1\226\1\223\1\0\2\226"+
    "\1\u0108\1\271\1\u0105\1\226\1\u0108\1\u0105\1\227\3\0"+
    "\1\223\1\271\1\u0107\6\0\2\273\37\0\1\260\1\223"+
    "\1\0\3\260\1\u0103\1\u0106\1\226\1\u0109\1\227\1\u0106"+
    "\1\230\1\270\1\0\2\223\1\u010b\6\0\1\u010c\7\0"+
    "\1\276\14\0\2\u0139\1\u014c\3\0\1\u0138\1\u0139\3\0"+
    "\22\u0139\1\u014e\1\u013a\1\u0139\2\0\5\u0139\4\0\4\u0139"+
    "\2\0\1\u014c\23\0\1\226\2\0\2\226\1\u0108\1\273"+
    "\1\u0108\1\226\2\u0108\1\226\4\0\1\273\1\u0102\6\0"+
    "\2\273\37\0\1\260\2\0\3\260\1\230\1\u0109\1\226"+
    "\1\u0109\1\226\1\u0109\1\230\4\0\1\u014f\6\0\1\276"+
    "\7\0\1\276\30\0\1\226\1\223\1\0\2\226\1\u0147"+
    "\1\223\1\227\2\226\2\u010a\3\0\2\223\1\u0150\17\0"+
    "\1\277\13\0\2\u0139\1\u0151\3\0\1\u0138\1\u0139\3\0"+
    "\22\u0139\1\u0152\1\u013a\1\u0139\2\0\5\u0139\4\0\4\u0139"+
    "\2\0\1\u0151\31\0\1\270\1\u010c\1\0\1\276\1\0"+
    "\1\u010c\1\0\1\270\3\0\1\u010d\6\0\1\u010c\7\0"+
    "\1\276\16\0\1\u0153\32\0\1\u0154\23\0\1\u0153\7\0"+
    "\2\u0139\1\u014c\4\0\1\u0139\3\0\22\u0139\1\u0155\1\u013a"+
    "\1\u0139\2\0\5\u0139\4\0\4\u0139\2\0\1\u014c\11\0"+
    "\1\u0149\32\0\1\u0156\23\0\1\u0149\11\0\1\u0157\32\0"+
    "\1\u0158\23\0\1\u0157\11\0\1\u0144\32\0\1\u0159\23\0"+
    "\1\u0144\11\0\1\u015a\32\0\1\u015b\23\0\1\u015a\11\0"+
    "\1\u015c\32\0\1\u015d\23\0\1\u015c\23\0\1\226\2\0"+
    "\1\226\1\u0114\1\226\1\0\1\u0114\4\226\5\0\1\374"+
    "\15\0\1\275\31\0\1\226\2\0\2\226\1\u0115\1\273"+
    "\1\u011c\1\226\1\u0108\1\u0100\1\u0147\4\0\1\273\1\u0102"+
    "\6\0\2\273\1\274\6\0\1\277\27\0\1\301\1\302"+
    "\1\0\1\226\1\u0114\1\u011c\1\324\1\u0116\1\226\1\u0117"+
    "\1\u0108\1\u0123\1\0\1\270\2\0\1\273\1\u0102\6\0"+
    "\1\272\1\273\1\274\4\0\1\275\1\276\30\0\1\226"+
    "\2\0\2\226\1\u0108\1\273\1\u0117\1\226\1\u0117\1\u0108"+
    "\1\u015e\4\0\1\273\1\u0102\6\0\1\326\1\273\6\0"+
    "\1\276\30\0\1\226\2\0\2\226\1\u0147\1\270\1\u0123"+
    "\1\226\1\u015e\1\u0147\1\u0118\1\0\1\270\3\0\1\u015f"+
    "\6\0\1\u010c\7\0\1\276\1\277\15\0\1\u0140\32\0"+
    "\1\u0160\23\0\1\u0140\11\0\1\u0144\3\0\1\u013d\26\0"+
    "\1\u0161\23\0\1\u0144\25\0\3\237\2\u011b\1\273\1\0"+
    "\2\u011b\1\237\4\0\1\273\1\u0120\6\0\2\273\37\0"+
    "\1\226\2\0\2\226\1\u011c\1\273\1\u011c\1\226\2\u0108"+
    "\1\226\4\0\1\273\1\u0102\6\0\2\273\1\274\36\0"+
    "\1\226\1\0\1\237\2\303\1\u011d\1\u011b\1\u0108\1\226"+
    "\2\u011d\1\303\4\0\1\273\1\u0120\6\0\2\273\37\0"+
    "\1\226\1\0\1\237\2\303\1\u011e\1\u011b\1\u0108\1\226"+
    "\1\u011d\1\u011e\1\u011f\4\0\1\273\1\u0120\6\0\2\273"+
    "\7\0\1\277\27\0\1\226\1\0\1\237\2\303\1\u011f"+
    "\1\237\2\226\1\303\2\u011f\5\0\1\u0162\17\0\1\277"+
    "\15\0\1\u0149\3\0\1\u013d\26\0\1\u0163\23\0\1\u0149"+
    "\25\0\4\237\1\u0121\1\270\1\0\2\237\1\u0121\1\0"+
    "\1\270\3\0\1\u0125\6\0\1\270\36\0\1\365\1\0"+
    "\1\226\2\0\2\226\1\u0108\1\273\1\u0122\1\226\1\u0108"+
    "\1\u0122\1\226\1\0\1\251\2\0\1\273\1\u0102\6\0"+
    "\2\273\37\0\1\226\2\0\3\226\1\270\1\u0123\1\226"+
    "\1\u015e\1\226\1\u0123\1\0\1\270\3\0\1\u015f\6\0"+
    "\1\u010c\7\0\1\276\30\0\1\226\1\0\1\237\3\303"+
    "\1\237\1\u015e\1\226\1\u0124\1\303\1\u0124\5\0\1\u0164"+
    "\6\0\1\276\7\0\1\276\16\0\1\u0153\3\0\1\u013d"+
    "\26\0\1\u0165\23\0\1\u0153\7\0\3\4\10\0\7\4"+
    "\1\u0166\12\4\2\0\1\4\2\0\5\4\4\0\4\4"+
    "\2\0\1\4\11\0\1\u012d\1\0\2\66\1\0\1\67"+
    "\1\0\1\66\23\0\1\71\21\0\2\66\1\u012d\7\0"+
    "\3\3\1\65\2\66\1\0\1\67\1\0\1\66\1\154"+
    "\1\3\1\32\2\3\1\u0167\3\3\1\32\5\3\2\32"+
    "\2\3\2\0\1\32\2\0\5\3\4\0\4\3\2\66"+
    "\1\3\30\0\1\u012a\1\273\1\u012a\1\0\2\273\5\0"+
    "\1\273\1\u010f\6\0\2\273\1\274\22\0\3\3\1\65"+
    "\2\66\1\0\1\67\1\0\1\66\1\0\1\3\1\322"+
    "\20\3\2\0\1\3\2\0\5\3\4\0\4\3\2\66"+
    "\1\3\7\0\3\3\1\65\2\66\1\0\1\67\1\0"+
    "\1\66\1\0\4\3\1\u0168\15\3\2\0\1\3\2\0"+
    "\5\3\4\0\4\3\2\66\1\3\16\0\1\u012e\31\0"+
    "\1\103\7\0\1\342\26\0\1\u012f\41\0\1\342\26\0"+
    "\1\u0130\2\u0131\5\0\1\u0132\1\0\1\u0132\4\0\1\u0132"+
    "\4\0\1\u0132\14\0\1\u0133\3\0\1\u0132\1\0\1\u0132"+
    "\21\0\3\u0131\5\0\1\u0132\1\0\1\u0132\4\0\1\u0132"+
    "\4\0\1\u0132\20\0\1\u0132\1\0\1\u0132\24\0\1\u0169"+
    "\4\0\1\u0132\1\0\1\u0132\4\0\1\u0132\4\0\1\u0132"+
    "\20\0\1\u0132\1\0\1\u0132\21\0\3\u0131\5\0\1\u0132"+
    "\1\0\1\u0132\4\0\1\u0132\4\0\1\u0132\14\0\1\u0133"+
    "\3\0\1\u0132\1\0\1\u0132\21\0\1\u0135\37\0\1\u0136"+
    "\23\0\1\u016a\4\0\1\u016b\31\0\1\u016c\5\0\1\u0136"+
    "\11\0\1\u016a\7\0\1\346\6\0\1\u0137\3\0\3\346"+
    "\1\0\5\346\1\0\3\346\1\0\1\346\2\0\1\346"+
    "\2\0\1\346\2\0\1\346\1\0\1\346\1\0\1\346"+
    "\1\u0136\3\0\4\346\12\0\3\u016d\3\0\1\u016e\1\u016d"+
    "\3\0\22\u016d\2\0\1\u016d\2\0\5\u016d\4\0\4\u016d"+
    "\2\0\1\u016d\7\0\3\u0139\4\0\1\u0139\3\0\22\u0139"+
    "\1\0\1\u013a\1\u0139\2\0\5\u0139\4\0\4\u0139\2\0"+
    "\1\u0139\45\0\1\u013a\2\0\1\u016f\27\0\3\u0170\3\0"+
    "\1\u0171\1\u0170\3\0\22\u0170\2\0\1\u0170\2\0\5\u0170"+
    "\4\0\4\u0170\2\0\1\u0170\7\0\3\u0172\3\0\1\u0173"+
    "\1\u0172\3\0\22\u0172\2\0\1\u0172\2\0\5\u0172\4\0"+
    "\4\u0172\2\0\1\u0172\7\0\3\u0174\3\0\1\u0175\1\u0174"+
    "\3\0\22\u0174\2\0\1\u0174\2\0\5\u0174\4\0\4\u0174"+
    "\2\0\1\u0174\23\0\1\u013e\3\0\1\u013e\1\0\1\u013e"+
    "\3\0\2\u013e\4\0\1\u013e\1\u0176\33\0\3\3\1\65"+
    "\2\66\1\0\1\67\1\0\1\66\1\0\22\3\2\0"+
    "\1\u0177\2\0\5\3\4\0\4\3\2\66\1\3\11\0"+
    "\1\u0140\7\0\1\u0178\46\0\1\u0140\11\0\1\u0140\1\u0179"+
    "\2\0\1\u0138\26\0\1\u0141\23\0\1\u0140\7\0\2\u0139"+
    "\1\u0142\4\0\1\u0139\2\0\1\u0178\22\u0139\1\0\1\u013a"+
    "\1\u0139\2\0\5\u0139\4\0\4\u0139\2\0\1\u0142\7\0"+
    "\2\u0139\1\u0142\1\u0179\3\0\1\u0139\3\0\22\u0139\1\u0143"+
    "\1\u013a\1\u0139\2\0\5\u0139\4\0\4\u0139\2\0\1\u0142"+
    "\11\0\1\u0144\7\0\1\u017a\46\0\1\u0144\11\0\1\u0144"+
    "\1\u017b\2\0\1\u0138\26\0\1\u0145\23\0\1\u0144\11\0"+
    "\1\u0149\3\0\1\u013b\26\0\1\u017c\23\0\1\u0149\23\0"+
    "\1\226\2\0\2\226\1\u0147\1\0\3\226\2\u0147\5\0"+
    "\1\u0148\17\0\1\277\15\0\1\u015c\3\0\1\u0138\26\0"+
    "\1\u017d\23\0\1\u015c\11\0\1\u0149\7\0\1\u017e\46\0"+
    "\1\u0149\11\0\1\u0149\1\u017f\2\0\1\u0138\26\0\1\u014a"+
    "\23\0\1\u0149\7\0\2\u0139\1\u0151\3\0\1\u013b\1\u0139"+
    "\3\0\22\u0139\1\u0180\1\u013a\1\u0139\2\0\5\u0139\4\0"+
    "\4\u0139\2\0\1\u0151\7\0\2\u0139\1\u014c\4\0\1\u0139"+
    "\2\0\1\u017e\22\u0139\1\0\1\u013a\1\u0139\2\0\5\u0139"+
    "\4\0\4\u0139\2\0\1\u014c\7\0\2\u0139\1\u014c\1\u017f"+
    "\2\0\1\u013b\1\u0139\3\0\22\u0139\1\u014d\1\u013a\1\u0139"+
    "\2\0\5\u0139\4\0\4\u0139\2\0\1\u014c\7\0\2\u0139"+
    "\1\u014c\1\u017f\2\0\1\u0138\1\u0139\3\0\22\u0139\1\u014e"+
    "\1\u013a\1\u0139\2\0\5\u0139\4\0\4\u0139\2\0\1\u014c"+
    "\11\0\1\u015a\3\0\1\u0138\26\0\1\u0181\23\0\1\u015a"+
    "\7\0\2\u0139\1\u0182\3\0\1\u0138\1\u0139\3\0\22\u0139"+
    "\1\u0183\1\u013a\1\u0139\2\0\5\u0139\4\0\4\u0139\2\0"+
    "\1\u0182\7\0\2\u0139\1\u0151\4\0\1\u0139\2\0\1\u0184"+
    "\22\u0139\1\0\1\u013a\1\u0139\2\0\5\u0139\4\0\4\u0139"+
    "\2\0\1\u0151\7\0\2\u0139\1\u0151\1\u0185\2\0\1\u0138"+
    "\1\u0139\3\0\22\u0139\1\u0152\1\u013a\1\u0139\2\0\5\u0139"+
    "\4\0\4\u0139\2\0\1\u0151\11\0\1\u0153\7\0\1\u0184"+
    "\46\0\1\u0153\11\0\1\u0153\1\u0185\31\0\1\u0154\23\0"+
    "\1\u0153\7\0\2\u0139\1\u014c\1\u017f\3\0\1\u0139\3\0"+
    "\22\u0139\1\u0155\1\u013a\1\u0139\2\0\5\u0139\4\0\4\u0139"+
    "\2\0\1\u014c\11\0\1\u0149\1\u017f\31\0\1\u0156\23\0"+
    "\1\u0149\11\0\1\u0157\7\0\1\u0186\46\0\1\u0157\11\0"+
    "\1\u0157\1\u0187\31\0\1\u0158\23\0\1\u0157\11\0\1\u0144"+
    "\1\u017b\31\0\1\u0159\23\0\1\u0144\11\0\1\u015a\7\0"+
    "\1\u0188\46\0\1\u015a\11\0\1\u015a\1\u0189\31\0\1\u015b"+
    "\23\0\1\u015a\11\0\1\u015c\7\0\1\u018a\46\0\1\u015c"+
    "\11\0\1\u015c\1\u018b\31\0\1\u015d\23\0\1\u015c\23\0"+
    "\1\226\2\0\3\226\1\0\1\u015e\1\226\1\u015e\1\226"+
    "\1\u015e\5\0\1\u014f\6\0\1\276\7\0\1\276\16\0"+
    "\1\u0153\3\0\1\u0138\26\0\1\u018c\23\0\1\u0153\11\0"+
    "\1\u0140\1\u0179\31\0\1\u0160\23\0\1\u0140\11\0\1\u0144"+
    "\1\u017b\2\0\1\u013d\26\0\1\u0161\23\0\1\u0144\11\0"+
    "\1\u015c\3\0\1\u013d\26\0\1\u018d\23\0\1\u015c\11\0"+
    "\1\u0149\1\u017f\2\0\1\u013d\26\0\1\u0163\23\0\1\u0149"+
    "\11\0\1\u015a\3\0\1\u013d\26\0\1\u018e\23\0\1\u015a"+
    "\11\0\1\u0153\1\u0185\2\0\1\u013d\26\0\1\u0165\23\0"+
    "\1\u0153\7\0\3\4\10\0\2\4\1\u018f\17\4\2\0"+
    "\1\4\2\0\5\4\4\0\4\4\2\0\1\4\7\0"+
    "\3\3\1\65\2\66\1\0\1\67\1\0\1\66\1\154"+
    "\1\3\1\32\2\3\1\32\3\3\1\32\1\3\1\u0190"+
    "\3\3\2\32\2\3\2\0\1\32\2\0\5\3\4\0"+
    "\4\3\2\66\1\3\21\0\1\u0169\10\0\1\u0191\2\0"+
    "\1\u0191\2\0\1\u0191\41\0\1\u016a\4\0\1\u0192\31\0"+
    "\1\u016c\17\0\1\u016a\11\0\1\u016a\4\0\1\u016b\31\0"+
    "\1\u016c\17\0\1\u016a\7\0\1\u0193\6\0\1\u0194\3\0"+
    "\3\u0193\1\0\5\u0193\1\0\3\u0193\1\0\1\u0193\2\0"+
    "\1\u0193\2\0\1\u0193\1\0\1\u016c\1\u0193\1\0\1\u0193"+
    "\1\0\1\u0193\4\0\4\u0193\12\0\3\u016d\3\0\1\u0195"+
    "\1\u016d\3\0\22\u016d\2\0\1\u016d\2\0\5\u016d\4\0"+
    "\4\u016d\2\0\1\u016d\7\0\3\u016d\3\0\1\u016e\1\u016d"+
    "\3\0\22\u016d\1\0\1\u0196\1\u016d\2\0\5\u016d\4\0"+
    "\4\u016d\2\0\1\u016d\50\0\1\u016f\27\0\3\u0170\3\0"+
    "\1\u0197\1\u0170\3\0\22\u0170\2\0\1\u0170\2\0\5\u0170"+
    "\4\0\4\u0170\2\0\1\u0170\7\0\3\u0170\3\0\1\u0171"+
    "\1\u0170\3\0\22\u0170\1\0\1\u0198\1\u0170\2\0\5\u0170"+
    "\4\0\4\u0170\2\0\1\u0170\7\0\3\u0172\3\0\1\u0199"+
    "\1\u0172\3\0\22\u0172\2\0\1\u0172\2\0\5\u0172\4\0"+
    "\4\u0172\2\0\1\u0172\7\0\3\u0172\3\0\1\u0173\1\u0172"+
    "\3\0\22\u0172\1\0\1\u019a\1\u0172\2\0\5\u0172\4\0"+
    "\4\u0172\2\0\1\u0172\7\0\3\u0174\3\0\1\u019b\1\u0174"+
    "\3\0\22\u0174\2\0\1\u0174\2\0\5\u0174\4\0\4\u0174"+
    "\2\0\1\u0174\7\0\3\u0174\3\0\1\u0175\1\u0174\3\0"+
    "\22\u0174\1\0\1\u019c\1\u0174\2\0\5\u0174\4\0\4\u0174"+
    "\2\0\1\u0174\15\0\1\u019d\26\0\1\u0176\33\0\3\3"+
    "\1\65\2\66\1\0\1\67\1\0\1\66\1\0\21\3"+
    "\1\u019e\2\0\1\3\2\0\5\3\4\0\4\3\2\66"+
    "\1\3\11\0\1\u019f\7\0\1\u0178\23\0\1\u01a0\22\0"+
    "\1\u019f\11\0\1\u01a1\56\0\1\u01a1\11\0\1\u01a2\7\0"+
    "\1\u017a\23\0\1\u01a3\22\0\1\u01a2\11\0\1\u01a4\56\0"+
    "\1\u01a4\11\0\1\u0149\1\u017f\2\0\1\u013b\26\0\1\u017c"+
    "\23\0\1\u0149\11\0\1\u015c\1\u018b\2\0\1\u0138\26\0"+
    "\1\u017d\23\0\1\u015c\11\0\1\u01a5\7\0\1\u017e\23\0"+
    "\1\u01a6\22\0\1\u01a5\11\0\1\u01a7\56\0\1\u01a7\7\0"+
    "\2\u0139\1\u0151\1\u0185\2\0\1\u013b\1\u0139\3\0\22\u0139"+
    "\1\u0180\1\u013a\1\u0139\2\0\5\u0139\4\0\4\u0139\2\0"+
    "\1\u0151\11\0\1\u015a\1\u0189\2\0\1\u0138\26\0\1\u0181"+
    "\23\0\1\u015a\7\0\2\u0139\1\u0182\4\0\1\u0139\2\0"+
    "\1\u018a\22\u0139\1\0\1\u013a\1\u0139\2\0\5\u0139\4\0"+
    "\4\u0139\2\0\1\u0182\7\0\2\u0139\1\u0182\1\u018b\2\0"+
    "\1\u0138\1\u0139\3\0\22\u0139\1\u0183\1\u013a\1\u0139\2\0"+
    "\5\u0139\4\0\4\u0139\2\0\1\u0182\11\0\1\u01a8\7\0"+
    "\1\u0184\23\0\1\u01a9\22\0\1\u01a8\11\0\1\u01aa\56\0"+
    "\1\u01aa\11\0\1\u01ab\7\0\1\u0186\23\0\1\u01ac\22\0"+
    "\1\u01ab\11\0\1\u01ad\56\0\1\u01ad\11\0\1\u01ae\7\0"+
    "\1\u0188\23\0\1\u01af\22\0\1\u01ae\11\0\1\u01b0\56\0"+
    "\1\u01b0\11\0\1\u01b1\7\0\1\u018a\23\0\1\u01b2\22\0"+
    "\1\u01b1\11\0\1\u01b3\56\0\1\u01b3\11\0\1\u0153\1\u0185"+
    "\2\0\1\u0138\26\0\1\u018c\23\0\1\u0153\11\0\1\u015c"+
    "\1\u018b\2\0\1\u013d\26\0\1\u018d\23\0\1\u015c\11\0"+
    "\1\u015a\1\u0189\2\0\1\u013d\26\0\1\u018e\23\0\1\u015a"+
    "\7\0\3\3\1\65\2\66\1\0\1\67\1\0\1\66"+
    "\1\0\7\3\1\361\12\3\2\0\1\3\2\0\5\3"+
    "\4\0\4\3\2\66\1\3\21\0\1\u01b4\10\0\1\u0191"+
    "\2\0\1\u0191\2\0\1\u0191\46\0\1\u0192\31\0\1\u016c"+
    "\27\0\3\u0193\4\0\1\u01b5\1\0\1\u01b6\1\0\22\u0193"+
    "\2\0\1\u0193\1\u01b6\1\0\5\u0193\1\u01b6\3\0\4\u0193"+
    "\2\0\1\u0193\3\0\1\u01b6\3\0\1\u0193\6\0\1\u0194"+
    "\3\0\3\u0193\1\0\5\u0193\1\0\3\u0193\1\0\1\u0193"+
    "\2\0\1\u0193\2\0\1\u0193\2\0\1\u0193\1\0\1\u0193"+
    "\1\0\1\u0193\4\0\4\u0193\20\0\1\u0195\27\0\1\u0196"+
    "\70\0\1\u0196\2\0\1\u01b7\35\0\1\u0197\27\0\1\u0198"+
    "\70\0\1\u0198\2\0\1\u01b8\35\0\1\u0199\27\0\1\u019a"+
    "\70\0\1\u019a\2\0\1\u01b9\35\0\1\u019b\27\0\1\u019c"+
    "\70\0\1\u019c\2\0\1\u01ba\27\0\3\u01bb\3\0\1\u01bc"+
    "\1\u01bb\3\0\22\u01bb\2\0\1\u01bb\2\0\5\u01bb\4\0"+
    "\4\u01bb\2\0\1\u01bb\7\0\3\3\1\65\2\66\1\0"+
    "\1\67\1\0\1\66\1\0\14\3\1\u01bd\5\3\2\0"+
    "\1\3\2\0\5\3\4\0\4\3\2\66\1\3\11\0"+
    "\1\u019f\33\0\1\u01a0\22\0\1\u019f\45\0\1\u01a0\2\0"+
    "\1\u01be\31\0\1\u01a1\33\0\1\u01bf\22\0\1\u01a1\11\0"+
    "\1\u01a2\33\0\1\u01a3\22\0\1\u01a2\45\0\1\u01a3\2\0"+
    "\1\u01c0\31\0\1\u01a4\33\0\1\u01c1\22\0\1\u01a4\11\0"+
    "\1\u01a5\33\0\1\u01a6\22\0\1\u01a5\45\0\1\u01a6\2\0"+
    "\1\u01c2\31\0\1\u01a7\33\0\1\u01c3\22\0\1\u01a7\11\0"+
    "\1\u01a8\33\0\1\u01a9\22\0\1\u01a8\45\0\1\u01a9\2\0"+
    "\1\u01c4\31\0\1\u01aa\33\0\1\u01c5\22\0\1\u01aa\11\0"+
    "\1\u01ab\33\0\1\u01ac\22\0\1\u01ab\45\0\1\u01ac\2\0"+
    "\1\u01c6\31\0\1\u01ad\33\0\1\u01c7\22\0\1\u01ad\11\0"+
    "\1\u01ae\33\0\1\u01af\22\0\1\u01ae\45\0\1\u01af\2\0"+
    "\1\u01c8\31\0\1\u01b0\33\0\1\u01c9\22\0\1\u01b0\11\0"+
    "\1\u01b1\33\0\1\u01b2\22\0\1\u01b1\45\0\1\u01b2\2\0"+
    "\1\u01ca\31\0\1\u01b3\33\0\1\u01cb\22\0\1\u01b3\21\0"+
    "\1\u01b4\1\0\1\u01cc\3\0\1\u01cc\1\0\1\u01cc\3\0"+
    "\2\u01cc\4\0\1\u01cc\43\0\1\u01b5\1\0\1\u01b6\26\0"+
    "\1\u01b6\6\0\1\u01b6\15\0\1\u01b6\3\0\1\u01cd\1\0"+
    "\1\u01ce\4\0\1\u01cf\1\0\1\u01b6\1\0\2\u01d0\1\u01cd"+
    "\1\0\1\u01d0\1\u01cd\1\u01d0\2\u01cd\1\0\3\u01d0\1\0"+
    "\1\u01d0\2\0\1\u01cd\2\0\1\u01cd\1\u01b6\1\u01d1\1\u01cd"+
    "\1\0\1\u01cd\1\0\1\u01cd\1\u01b6\3\0\4\u01cd\2\0"+
    "\1\u01d2\3\0\1\u01b6\44\0\1\u01b7\70\0\1\u01b8\70\0"+
    "\1\u01b9\70\0\1\u01ba\27\0\3\u01bb\3\0\1\u01d3\1\u01bb"+
    "\3\0\22\u01bb\2\0\1\u01bb\2\0\5\u01bb\4\0\4\u01bb"+
    "\2\0\1\u01bb\7\0\3\u01bb\3\0\1\u01bc\1\u01d4\1\0"+
    "\1\u01d5\1\0\2\u01d6\2\u01bb\1\u01d6\1\u01bb\1\u01d6\3\u01bb"+
    "\3\u01d6\1\u01bb\1\u01d6\3\u01bb\2\0\1\u01bb\2\0\5\u01bb"+
    "\4\0\4\u01bb\1\u01d7\1\0\1\u01d6\50\0\1\u01be\65\0"+
    "\1\u01a0\73\0\1\u01c0\65\0\1\u01a3\73\0\1\u01c2\65\0"+
    "\1\u01a6\73\0\1\u01c4\65\0\1\u01a9\73\0\1\u01c6\65\0"+
    "\1\u01ac\73\0\1\u01c8\65\0\1\u01af\73\0\1\u01ca\65\0"+
    "\1\u01b2\46\0\1\u01cc\3\0\1\u01cc\1\0\1\u01cc\3\0"+
    "\2\u01cc\4\0\1\u01cc\1\u01d8\33\0\3\u01cd\10\0\22\u01cd"+
    "\2\0\1\u01cd\1\0\1\u01d1\5\u01cd\4\0\4\u01cd\2\0"+
    "\1\u01cd\11\0\1\u01ce\36\0\1\u01d1\17\0\1\u01ce\7\0"+
    "\1\u01cd\1\0\1\u01ce\4\0\1\u01cf\1\0\1\u01d9\1\0"+
    "\2\u01d0\1\u01cd\1\0\1\u01d0\1\u01cd\1\u01d0\2\u01cd\1\0"+
    "\3\u01d0\1\0\1\u01d0\2\0\1\u01cd\2\0\1\u01cd\1\0"+
    "\1\u01d1\1\u01cd\1\0\1\u01cd\1\0\1\u01cd\4\0\4\u01cd"+
    "\2\0\1\u01d2\7\0\3\u01cd\6\0\1\u01d9\1\0\2\u01d0"+
    "\2\u01cd\1\u01d0\1\u01cd\1\u01d0\3\u01cd\3\u01d0\1\u01cd\1\u01d0"+
    "\3\u01cd\2\0\1\u01cd\1\0\1\u01d1\5\u01cd\4\0\4\u01cd"+
    "\2\0\1\u01d0\7\0\1\u01da\6\0\1\u01db\3\0\3\u01da"+
    "\1\0\5\u01da\1\0\3\u01da\1\0\1\u01da\2\0\1\u01da"+
    "\2\0\1\u01da\1\0\1\u01d1\1\u01da\1\0\1\u01da\1\0"+
    "\1\u01da\4\0\4\u01da\14\0\1\u01ce\6\0\1\u01d9\1\0"+
    "\2\u01d9\2\0\1\u01d9\1\0\1\u01d9\3\0\3\u01d9\1\0"+
    "\1\u01d9\7\0\1\u01d1\17\0\1\u01d2\15\0\1\u01d3\1\u01dc"+
    "\1\0\1\u01d5\1\0\2\u01d5\2\0\1\u01d5\1\0\1\u01d5"+
    "\3\0\3\u01d5\1\0\1\u01d5\25\0\1\u01d7\1\0\1\u01d5"+
    "\7\0\3\u01bb\3\0\1\u01d3\1\u01d4\1\0\1\u01d5\1\0"+
    "\2\u01d6\2\u01bb\1\u01d6\1\u01bb\1\u01d6\3\u01bb\3\u01d6\1\u01bb"+
    "\1\u01d6\3\u01bb\2\0\1\u01bb\2\0\5\u01bb\4\0\4\u01bb"+
    "\1\u01d7\1\0\1\u01d6\16\0\1\u01dd\1\0\1\u01d5\1\0"+
    "\2\u01d5\2\0\1\u01d5\1\0\1\u01d5\3\0\3\u01d5\1\0"+
    "\1\u01d5\4\0\1\u01de\22\0\1\u01d5\7\0\3\u01bb\3\0"+
    "\1\u01d3\1\u01df\1\0\1\u01d5\1\0\2\u01d6\2\u01bb\1\u01d6"+
    "\1\u01bb\1\u01d6\3\u01bb\3\u01d6\1\u01bb\1\u01d6\3\u01bb\1\0"+
    "\1\u01de\1\u01bb\2\0\5\u01bb\4\0\4\u01bb\2\0\1\u01d6"+
    "\16\0\1\u01e0\1\0\1\u01d5\1\0\2\u01d5\2\0\1\u01d5"+
    "\1\0\1\u01d5\3\0\3\u01d5\1\0\1\u01d5\25\0\1\u01d7"+
    "\1\0\1\u01d5\15\0\1\u01e1\26\0\1\u01d8\44\0\1\u01d9"+
    "\1\0\2\u01d9\2\0\1\u01d9\1\0\1\u01d9\3\0\3\u01d9"+
    "\1\0\1\u01d9\7\0\1\u01d1\17\0\1\u01d9\7\0\3\u01da"+
    "\1\u01e2\7\0\22\u01da\2\0\1\u01da\2\0\5\u01da\4\0"+
    "\4\u01da\1\u01e3\1\0\1\u01da\7\0\1\u01da\6\0\1\u01db"+
    "\3\0\3\u01da\1\0\5\u01da\1\0\3\u01da\1\0\1\u01da"+
    "\2\0\1\u01da\2\0\1\u01da\2\0\1\u01da\1\0\1\u01da"+
    "\1\0\1\u01da\4\0\4\u01da\21\0\1\u01dc\1\0\1\u01d5"+
    "\1\0\2\u01d5\2\0\1\u01d5\1\0\1\u01d5\3\0\3\u01d5"+
    "\1\0\1\u01d5\25\0\1\u01d7\1\0\1\u01d5\16\0\1\u01dd"+
    "\26\0\1\u01de\70\0\1\u01de\2\0\1\u01e4\27\0\3\u01bb"+
    "\3\0\1\u01d3\1\u01df\3\0\22\u01bb\1\0\1\u01de\1\u01bb"+
    "\2\0\5\u01bb\4\0\4\u01bb\2\0\1\u01bb\16\0\1\u01e0"+
    "\1\0\1\u01d5\1\0\2\u01d5\2\0\1\u01d5\1\0\1\u01d5"+
    "\3\0\3\u01d5\1\0\1\u01d5\27\0\1\u01d5\7\0\3\u01e5"+
    "\3\0\1\u01e6\1\u01e5\3\0\22\u01e5\2\0\1\u01e5\2\0"+
    "\5\u01e5\4\0\4\u01e5\2\0\1\u01e5\12\0\1\u01e2\3\0"+
    "\1\u01e7\26\0\1\u01e8\41\0\1\u01e7\26\0\1\u01e8\20\0"+
    "\1\u01e3\52\0\1\u01e4\27\0\3\u01e5\3\0\1\u01e9\1\u01e5"+
    "\3\0\22\u01e5\2\0\1\u01e5\2\0\5\u01e5\4\0\4\u01e5"+
    "\2\0\1\u01e5\7\0\3\u01e5\3\0\1\u01e6\1\u01ea\1\0"+
    "\1\u01eb\1\0\2\u01ec\2\u01e5\1\u01ec\1\u01e5\1\u01ec\3\u01e5"+
    "\3\u01ec\1\u01e5\1\u01ec\3\u01e5\2\0\1\u01e5\2\0\5\u01e5"+
    "\4\0\4\u01e5\1\u01ed\1\0\1\u01ec\16\0\1\u01e7\26\0"+
    "\1\u01e8\41\0\1\u01ee\26\0\1\u01e8\11\0\1\u01ef\1\u01f0"+
    "\25\0\1\u01e9\1\u01f1\1\0\1\u01eb\1\0\2\u01eb\2\0"+
    "\1\u01eb\1\0\1\u01eb\3\0\3\u01eb\1\0\1\u01eb\25\0"+
    "\1\u01ed\1\0\1\u01eb\7\0\3\u01e5\3\0\1\u01e9\1\u01ea"+
    "\1\0\1\u01eb\1\0\2\u01ec\2\u01e5\1\u01ec\1\u01e5\1\u01ec"+
    "\3\u01e5\3\u01ec\1\u01e5\1\u01ec\3\u01e5\2\0\1\u01e5\2\0"+
    "\5\u01e5\4\0\4\u01e5\1\u01ed\1\0\1\u01ec\16\0\1\u01f2"+
    "\1\0\1\u01eb\1\0\2\u01eb\2\0\1\u01eb\1\0\1\u01eb"+
    "\3\0\3\u01eb\1\0\1\u01eb\4\0\1\u01f3\22\0\1\u01eb"+
    "\7\0\3\u01e5\3\0\1\u01e9\1\u01f4\1\0\1\u01eb\1\0"+
    "\2\u01ec\2\u01e5\1\u01ec\1\u01e5\1\u01ec\3\u01e5\3\u01ec\1\u01e5"+
    "\1\u01ec\3\u01e5\1\0\1\u01f3\1\u01e5\2\0\5\u01e5\4\0"+
    "\4\u01e5\2\0\1\u01ec\16\0\1\u01f5\1\0\1\u01eb\1\0"+
    "\2\u01eb\2\0\1\u01eb\1\0\1\u01eb\3\0\3\u01eb\1\0"+
    "\1\u01eb\25\0\1\u01ed\1\0\1\u01eb\16\0\1\u01ee\40\0"+
    "\1\u01ef\1\u01f0\67\0\1\u01ef\1\u01f0\26\0\1\u01f6\7\0"+
    "\1\u01f7\1\0\1\u01f7\4\0\1\u01f7\4\0\1\u01f7\14\0"+
    "\1\u01f8\1\u01f0\2\0\1\u01f7\1\0\1\u01f7\21\0\1\u01f1"+
    "\1\0\1\u01eb\1\0\2\u01eb\2\0\1\u01eb\1\0\1\u01eb"+
    "\3\0\3\u01eb\1\0\1\u01eb\25\0\1\u01ed\1\0\1\u01eb"+
    "\16\0\1\u01f2\26\0\1\u01f3\70\0\1\u01f3\2\0\1\u01f9"+
    "\27\0\3\u01e5\3\0\1\u01e9\1\u01f4\3\0\22\u01e5\1\0"+
    "\1\u01f3\1\u01e5\2\0\5\u01e5\4\0\4\u01e5\2\0\1\u01e5"+
    "\16\0\1\u01f5\1\0\1\u01eb\1\0\2\u01eb\2\0\1\u01eb"+
    "\1\0\1\u01eb\3\0\3\u01eb\1\0\1\u01eb\27\0\1\u01eb"+
    "\16\0\1\u01f6\7\0\1\u01f7\1\0\1\u01f7\4\0\1\u01f7"+
    "\4\0\1\u01f7\14\0\1\u01f8\3\0\1\u01f7\1\0\1\u01f7"+
    "\24\0\1\u01fa\4\0\1\u01f7\1\0\1\u01f7\4\0\1\u01f7"+
    "\4\0\1\u01f7\20\0\1\u01f7\1\0\1\u01f7\21\0\1\u01fb"+
    "\7\0\1\u01f7\1\0\1\u01f7\4\0\1\u01f7\4\0\1\u01f7"+
    "\14\0\1\u01f8\3\0\1\u01f7\1\0\1\u01f7\53\0\1\u01f9"+
    "\6\0\1\u01fc\1\0\1\u01fd\30\0\1\u01fa\10\0\1\u01fe"+
    "\2\0\1\u01fe\2\0\1\u01fe\46\0\1\u01fb\7\0\1\u01f7"+
    "\1\0\1\u01f7\4\0\1\u01f7\4\0\1\u01f7\20\0\1\u01f7"+
    "\1\0\1\u01f7\62\0\1\u01fc\1\0\1\u01fd\25\0\1\u01ff"+
    "\4\0\1\u0200\2\0\1\u0200\1\0\1\u0200\30\0\1\u01fd"+
    "\30\0\1\u0201\10\0\1\u01fe\2\0\1\u01fe\2\0\1\u01fe"+
    "\46\0\1\u01ff\4\0\1\u0200\2\0\1\u0200\1\0\1\u0200"+
    "\56\0\1\u0202\4\0\1\u0200\2\0\1\u0200\1\0\1\u0200"+
    "\27\0\1\u0203\31\0\1\u0201\1\0\1\u0204\3\0\1\u0204"+
    "\1\0\1\u0204\3\0\2\u0204\4\0\1\u0204\43\0\1\u0202"+
    "\41\0\1\u0203\26\0\3\u0205\5\0\1\u0206\1\0\1\u0206"+
    "\4\0\1\u0206\4\0\1\u0206\14\0\1\u0207\1\u0203\2\0"+
    "\1\u0206\1\0\1\u0206\26\0\1\u0204\3\0\1\u0204\1\0"+
    "\1\u0204\3\0\2\u0204\4\0\1\u0204\1\u0208\42\0\3\u0205"+
    "\5\0\1\u0206\1\0\1\u0206\4\0\1\u0206\4\0\1\u0206"+
    "\20\0\1\u0206\1\0\1\u0206\24\0\1\u0209\4\0\1\u0206"+
    "\1\0\1\u0206\4\0\1\u0206\4\0\1\u0206\20\0\1\u0206"+
    "\1\0\1\u0206\21\0\3\u0205\5\0\1\u0206\1\0\1\u0206"+
    "\4\0\1\u0206\4\0\1\u0206\14\0\1\u0207\3\0\1\u0206"+
    "\1\0\1\u0206\20\0\1\u020a\26\0\1\u0208\45\0\1\u0209"+
    "\10\0\1\u020b\2\0\1\u020b\2\0\1\u020b\37\0\3\u020c"+
    "\3\0\1\u020d\1\u020c\3\0\22\u020c\2\0\1\u020c\2\0"+
    "\5\u020c\4\0\4\u020c\2\0\1\u020c\21\0\1\u020e\10\0"+
    "\1\u020b\2\0\1\u020b\2\0\1\u020b\37\0\3\u020c\3\0"+
    "\1\u020f\1\u020c\3\0\22\u020c\2\0\1\u020c\2\0\5\u020c"+
    "\4\0\4\u020c\2\0\1\u020c\7\0\3\u020c\3\0\1\u020d"+
    "\1\u0210\3\0\22\u020c\1\0\1\u0211\1\u020c\2\0\5\u020c"+
    "\4\0\4\u020c\1\u0212\1\0\1\u020c\21\0\1\u020e\1\0"+
    "\1\u0213\3\0\1\u0213\1\0\1\u0213\3\0\2\u0213\4\0"+
    "\1\u0213\42\0\1\u020f\1\u0214\26\0\1\u0211\20\0\1\u0212"+
    "\11\0\3\u020c\3\0\1\u020f\1\u0210\3\0\22\u020c\1\0"+
    "\1\u0211\1\u020c\2\0\5\u020c\4\0\4\u020c\1\u0212\1\0"+
    "\1\u020c\45\0\1\u0211\2\0\1\u0215\36\0\1\u0216\26\0"+
    "\1\u0211\20\0\1\u0212\25\0\1\u0213\3\0\1\u0213\1\0"+
    "\1\u0213\3\0\2\u0213\4\0\1\u0213\1\u0217\42\0\1\u0214"+
    "\26\0\1\u0211\20\0\1\u0212\52\0\1\u0215\36\0\1\u0216"+
    "\26\0\1\u0211\40\0\1\u0218\26\0\1\u0217\33\0\3\u0219"+
    "\3\0\1\u021a\1\u0219\3\0\22\u0219\2\0\1\u0219\2\0"+
    "\5\u0219\4\0\4\u0219\2\0\1\u0219\7\0\3\u0219\3\0"+
    "\1\u021b\1\u0219\3\0\22\u0219\2\0\1\u0219\2\0\5\u0219"+
    "\4\0\4\u0219\2\0\1\u0219\7\0\3\u0219\3\0\1\u021a"+
    "\1\u021c\1\0\1\u021d\1\0\2\u021e\2\u0219\1\u021e\1\u0219"+
    "\1\u021e\3\u0219\3\u021e\1\u0219\1\u021e\3\u0219\2\0\1\u0219"+
    "\2\0\5\u0219\4\0\4\u0219\1\u021f\1\0\1\u021e\15\0"+
    "\1\u021b\1\u0220\1\0\1\u021d\1\0\2\u021d\2\0\1\u021d"+
    "\1\0\1\u021d\3\0\3\u021d\1\0\1\u021d\25\0\1\u021f"+
    "\1\0\1\u021d\7\0\3\u0219\3\0\1\u021b\1\u021c\1\0"+
    "\1\u021d\1\0\2\u021e\2\u0219\1\u021e\1\u0219\1\u021e\3\u0219"+
    "\3\u021e\1\u0219\1\u021e\3\u0219\2\0\1\u0219\2\0\5\u0219"+
    "\4\0\4\u0219\1\u021f\1\0\1\u021e\16\0\1\u0221\1\0"+
    "\1\u021d\1\0\2\u021d\2\0\1\u021d\1\0\1\u021d\3\0"+
    "\3\u021d\1\0\1\u021d\4\0\1\u0222\22\0\1\u021d\7\0"+
    "\3\u0219\3\0\1\u021b\1\u0223\1\0\1\u021d\1\0\2\u021e"+
    "\2\u0219\1\u021e\1\u0219\1\u021e\3\u0219\3\u021e\1\u0219\1\u021e"+
    "\3\u0219\1\0\1\u0222\1\u0219\2\0\5\u0219\4\0\4\u0219"+
    "\2\0\1\u021e\16\0\1\u0224\1\0\1\u021d\1\0\2\u021d"+
    "\2\0\1\u021d\1\0\1\u021d\3\0\3\u021d\1\0\1\u021d"+
    "\25\0\1\u021f\1\0\1\u021d\16\0\1\u0220\1\0\1\u021d"+
    "\1\0\2\u021d\2\0\1\u021d\1\0\1\u021d\3\0\3\u021d"+
    "\1\0\1\u021d\25\0\1\u021f\1\0\1\u021d\16\0\1\u0221"+
    "\26\0\1\u0222\70\0\1\u0222\2\0\1\u0225\27\0\3\u0219"+
    "\3\0\1\u021b\1\u0223\3\0\22\u0219\1\0\1\u0222\1\u0219"+
    "\2\0\5\u0219\4\0\4\u0219\2\0\1\u0219\16\0\1\u0224"+
    "\1\0\1\u021d\1\0\2\u021d\2\0\1\u021d\1\0\1\u021d"+
    "\3\0\3\u021d\1\0\1\u021d\27\0\1\u021d\50\0\1\u0225"+
    "\6\0\1\u0226\1\0\1\u0227\66\0\1\u0226\1\0\1\u0227"+
    "\57\0\1\u0228\10\0\1\u0227\57\0\1\u0228\26\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[29754];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unkown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\34\1\1\11\2\1\1\11\5\1\3\11"+
    "\4\1\1\11\3\1\2\11\3\0\1\1\2\0\4\1"+
    "\1\11\3\0\1\1\1\0\4\1\1\0\5\1\2\0"+
    "\6\1\2\0\5\1\1\0\1\1\1\0\1\1\1\0"+
    "\1\1\2\0\1\1\1\0\3\1\2\0\2\1\1\0"+
    "\1\1\1\0\2\1\1\11\1\0\5\1\1\11\1\0"+
    "\2\1\2\0\3\1\1\0\2\1\5\0\1\1\1\0"+
    "\1\1\14\0\3\1\11\0\1\1\2\0\1\1\2\0"+
    "\1\1\36\0\4\1\1\0\2\1\6\0\4\1\10\0"+
    "\1\1\12\0\2\1\5\0\1\1\1\0\1\1\54\0"+
    "\4\1\1\0\2\1\7\0\1\1\12\0\1\1\46\0"+
    "\3\1\6\0\1\1\7\0\1\1\27\0\2\1\15\0"+
    "\1\1\30\0\4\1\2\0\2\1\1\0\1\1\1\0"+
    "\1\1\1\0\1\1\1\0\1\1\1\0\1\1\1\0"+
    "\1\1\31\0\1\1\60\0\1\1\22\0\1\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[552];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */
    public String lexeme;


  /**
   * Creates a new scanner
   * There is also a java.io.InputStream version of this constructor.
   *
   * @param   in  the java.io.Reader to read input from.
   */
  Lexer(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Creates a new scanner.
   * There is also java.io.Reader version of this constructor.
   *
   * @param   in  the java.io.Inputstream to read input from.
   */
  Lexer(java.io.InputStream in) {
    this(new java.io.InputStreamReader(in));
  }

  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x10000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 160) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzCurrentPos*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
    }

    /* finally: fill the buffer with new input */
    int numRead = zzReader.read(zzBuffer, zzEndRead,
                                            zzBuffer.length-zzEndRead);

    if (numRead > 0) {
      zzEndRead+= numRead;
      return false;
    }
    // unlikely but not impossible: read 0 characters, but not at end of stream    
    if (numRead == 0) {
      int c = zzReader.read();
      if (c == -1) {
        return true;
      } else {
        zzBuffer[zzEndRead++] = (char) c;
        return false;
      }     
    }

	// numRead < 0
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public Tokens yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL)
            zzInput = zzBufferL[zzCurrentPosL++];
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = zzBufferL[zzCurrentPosL++];
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          int zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
        case 3: 
          { lexeme=yytext(); return Identificador;
          }
        case 57: break;
        case 16: 
          { lexeme=yytext(); return Modulo;
          }
        case 58: break;
        case 11: 
          { lexeme=yytext(); return P_coma;
          }
        case 59: break;
        case 14: 
          { lexeme=yytext(); return Llave_a;
          }
        case 60: break;
        case 21: 
          { lexeme=yytext(); return Numero_Real;
          }
        case 61: break;
        case 36: 
          { lexeme=yytext(); return Coseno;
          }
        case 62: break;
        case 50: 
          { lexeme=yytext(); return Funcion_Redondeo;
          }
        case 63: break;
        case 46: 
          { lexeme=yytext(); return Salida;
          }
        case 64: break;
        case 37: 
          { lexeme=yytext(); return Entrada;
          }
        case 65: break;
        case 13: 
          { return Linea;
          }
        case 66: break;
        case 38: 
          { lexeme = yytext(); return Nulo;
          }
        case 67: break;
        case 32: 
          { lexeme=yytext(); return Logaritmo;
          }
        case 68: break;
        case 31: 
          { lexeme=yytext(); return pre_increm;
          }
        case 69: break;
        case 48: 
          { lexeme=yytext(); return Funcion_potencia;
          }
        case 70: break;
        case 23: 
          { lexeme = yytext(); return Op_decremento;
          }
        case 71: break;
        case 52: 
          { lexeme=yytext(); return Funcion_Numero_Aleatorio;
          }
        case 72: break;
        case 6: 
          { lexeme=yytext(); return Division;
          }
        case 73: break;
        case 30: 
          { lexeme=yytext(); return post_incremento;
          }
        case 74: break;
        case 18: 
          { lexeme=yytext(); return Op_logico;
          }
        case 75: break;
        case 25: 
          { lexeme = yytext(); return Op_atribucion;
          }
        case 76: break;
        case 29: 
          { lexeme = yytext(); return Op_incremento;
          }
        case 77: break;
        case 47: 
          { lexeme=yytext(); return Funcion_logaritmica;
          }
        case 78: break;
        case 12: 
          { lexeme=yytext(); return Asignacion;
          }
        case 79: break;
        case 15: 
          { lexeme=yytext(); return Llave_c;
          }
        case 80: break;
        case 8: 
          { lexeme=yytext(); return Parentesis_a;
          }
        case 81: break;
        case 35: 
          { lexeme=yytext(); return TipoDeDato;
          }
        case 82: break;
        case 54: 
          { lexeme=yytext(); return Salida_de_pantalla;
          }
        case 83: break;
        case 56: 
          { lexeme=yytext(); return Sentencia_If;
          }
        case 84: break;
        case 19: 
          { lexeme = yytext(); return Corchete_a;
          }
        case 85: break;
        case 27: 
          { lexeme=yytext(); return CadenaDeTexto;
          }
        case 86: break;
        case 28: 
          { lexeme=yytext(); return Do;
          }
        case 87: break;
        case 55: 
          { lexeme=yytext(); return Sentencia_for;
          }
        case 88: break;
        case 5: 
          { lexeme=yytext(); return Resta;
          }
        case 89: break;
        case 26: 
          { lexeme=yytext(); return Operacion_basica;
          }
        case 90: break;
        case 44: 
          { lexeme=yytext(); return String_a_Double;
          }
        case 91: break;
        case 2: 
          { lexeme=yytext(); return Variable;
          }
        case 92: break;
        case 22: 
          { lexeme=yytext(); return Numero_Entero_Negativo;
          }
        case 93: break;
        case 34: 
          { lexeme=yytext(); return Tangente;
          }
        case 94: break;
        case 42: 
          { lexeme=yytext(); return String_a_Real;
          }
        case 95: break;
        case 45: 
          { lexeme=yytext(); return String_a_Entero;
          }
        case 96: break;
        case 33: 
          { lexeme=yytext(); return Seno;
          }
        case 97: break;
        case 24: 
          { lexeme=yytext(); return Numero_Real_Negativo;
          }
        case 98: break;
        case 43: 
          { lexeme=yytext(); return String_a_Boleano;
          }
        case 99: break;
        case 53: 
          { lexeme=yytext(); return Funcion_Raiz;
          }
        case 100: break;
        case 9: 
          { lexeme=yytext(); return Parentesis_c;
          }
        case 101: break;
        case 49: 
          { lexeme=yytext(); return A_radianes;
          }
        case 102: break;
        case 17: 
          { lexeme=yytext(); return Exponencial;
          }
        case 103: break;
        case 20: 
          { lexeme = yytext(); return Corchete_c;
          }
        case 104: break;
        case 1: 
          { return ERROR;
          }
        case 105: break;
        case 10: 
          { lexeme = yytext(); return Operando_Condicional;
          }
        case 106: break;
        case 51: 
          { lexeme=yytext(); return Funcion_cos;
          }
        case 107: break;
        case 40: 
          { lexeme=yytext(); return While;
          }
        case 108: break;
        case 39: 
          { lexeme = yytext(); return Op_booleano;
          }
        case 109: break;
        case 7: 
          { /*Ignore*/
          }
        case 110: break;
        case 41: 
          { lexeme=yytext(); return BOOLEAN_a_STRING;
          }
        case 111: break;
        case 4: 
          { lexeme=yytext(); return Numero_Entero;
          }
        case 112: break;
        default: 
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
            return null;
          } 
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
